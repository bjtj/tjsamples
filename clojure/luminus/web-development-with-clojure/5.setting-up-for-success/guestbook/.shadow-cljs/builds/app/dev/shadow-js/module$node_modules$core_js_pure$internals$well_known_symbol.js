["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/core-js-pure/internals/well-known-symbol.js"],"~:js","shadow$provide.module$node_modules$core_js_pure$internals$well_known_symbol=function(global,require,module,exports){global=require(\"module$node_modules$core_js_pure$internals$global\");exports=require(\"module$node_modules$core_js_pure$internals$shared\");var has=require(\"module$node_modules$core_js_pure$internals$has\"),uid=require(\"module$node_modules$core_js_pure$internals$uid\"),NATIVE_SYMBOL=require(\"module$node_modules$core_js_pure$internals$native_symbol\");require=require(\"module$node_modules$core_js_pure$internals$use_symbol_as_uid\");\nvar WellKnownSymbolsStore=exports(\"wks\"),Symbol=global.Symbol,createWellKnownSymbol=require?Symbol:Symbol&&Symbol.withoutSetter||uid;module.exports=function(name){if(!has(WellKnownSymbolsStore,name)||!NATIVE_SYMBOL&&\"string\"!=typeof WellKnownSymbolsStore[name])NATIVE_SYMBOL&&has(Symbol,name)?WellKnownSymbolsStore[name]=Symbol[name]:WellKnownSymbolsStore[name]=createWellKnownSymbol(\"Symbol.\"+name);return WellKnownSymbolsStore[name]}}","~:source","shadow$provide[\"module$node_modules$core_js_pure$internals$well_known_symbol\"] = function(global,require,module,exports) {\nvar global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) {\n      WellKnownSymbolsStore[name] = Symbol[name];\n    } else {\n      WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n    }\n  } return WellKnownSymbolsStore[name];\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$core_js_pure$internals$use_symbol_as_uid","~$module$node_modules$core_js_pure$internals$uid","~$shadow.js","~$module$node_modules$core_js_pure$internals$has","~$module$node_modules$core_js_pure$internals$global","~$module$node_modules$core_js_pure$internals$shared","~$module$node_modules$core_js_pure$internals$native_symbol"]],"~:properties",["^5",[]],"~:compiled-at",1633159627348,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$core_js_pure$internals$well_known_symbol.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,4DAAf,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACrHH,MAAJ,CAAaC,OAAA,CAAQ,mDAAR,CACTG,QAAAA,CAASH,OAAA,CAAQ,mDAAR,CACb,KAAII,IAAMJ,OAAA,CAAQ,gDAAR,CAAV,CACIK,IAAML,OAAA,CAAQ,gDAAR,CADV,CAEIM,cAAgBN,OAAA,CAAQ,0DAAR,CAChBO,QAAAA,CAAoBP,OAAA,CAAQ,8DAAR,CAExB;IAAIQ,sBAAwBL,OAAA,CAAO,KAAP,CAA5B,CACIM,OAASV,MAATU,CAAgBA,MADpB,CAEIC,sBAAwBH,OAAA,CAAoBE,MAApB,CAA6BA,MAA7B,EAAuCA,MAAvC,CAA8CE,aAA9C,EAA+DN,GAE3FJ,OAAA,CAAOC,OAAP,CAAiBU,QAAS,CAACC,IAAD,CAAO,CAC/B,GAAI,CAACT,GAAA,CAAII,qBAAJ,CAA2BK,IAA3B,CAAL,EAA2CP,CAAAA,aAA3C,EAAkG,QAAlG,EAA4D,MAAOE,sBAAA,CAAsBK,IAAtB,CAAnE,CACMP,aAAJ,EAAqBF,GAAA,CAAIK,MAAJ,CAAYI,IAAZ,CAArB,CACEL,qBAAA,CAAsBK,IAAtB,CADF,CACgCJ,MAAA,CAAOI,IAAP,CADhC,CAGEL,qBAAA,CAAsBK,IAAtB,CAHF,CAGgCH,qBAAA,CAAsB,SAAtB,CAAkCG,IAAlC,CAEhC,OAAOL,sBAAA,CAAsBK,IAAtB,CAPsB,CAZwF;\",\n\"sources\":[\"node_modules/core-js-pure/internals/well-known-symbol.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$core_js_pure$internals$well_known_symbol\\\"] = function(global,require,module,exports) {\\nvar global = require('../internals/global');\\nvar shared = require('../internals/shared');\\nvar has = require('../internals/has');\\nvar uid = require('../internals/uid');\\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\\n\\nvar WellKnownSymbolsStore = shared('wks');\\nvar Symbol = global.Symbol;\\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\\n\\nmodule.exports = function (name) {\\n  if (!has(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {\\n    if (NATIVE_SYMBOL && has(Symbol, name)) {\\n      WellKnownSymbolsStore[name] = Symbol[name];\\n    } else {\\n      WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\\n    }\\n  } return WellKnownSymbolsStore[name];\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"shared\",\"has\",\"uid\",\"NATIVE_SYMBOL\",\"USE_SYMBOL_AS_UID\",\"WellKnownSymbolsStore\",\"Symbol\",\"createWellKnownSymbol\",\"withoutSetter\",\"module.exports\",\"name\"]\n}\n"]