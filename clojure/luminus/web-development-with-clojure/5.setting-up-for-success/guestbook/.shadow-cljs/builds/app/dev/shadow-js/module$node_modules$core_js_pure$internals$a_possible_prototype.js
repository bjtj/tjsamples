["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/core-js-pure/internals/a-possible-prototype.js"],"~:js","shadow$provide.module$node_modules$core_js_pure$internals$a_possible_prototype=function(global,require,module,exports){var isCallable=require(\"module$node_modules$core_js_pure$internals$is_callable\");module.exports=function(argument){if(\"object\"===typeof argument||isCallable(argument))return argument;throw TypeError(\"Can't set \"+String(argument)+\" as a prototype\");}}","~:source","shadow$provide[\"module$node_modules$core_js_pure$internals$a_possible_prototype\"] = function(global,require,module,exports) {\nvar isCallable = require('../internals/is-callable');\n\nmodule.exports = function (argument) {\n  if (typeof argument === 'object' || isCallable(argument)) return argument;\n  throw TypeError(\"Can't set \" + String(argument) + ' as a prototype');\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$core_js_pure$internals$is_callable","~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1633159627370,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$core_js_pure$internals$a_possible_prototype.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,+DAAf,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC5H,IAAIC,WAAaH,OAAA,CAAQ,wDAAR,CAEjBC,OAAA,CAAOC,OAAP,CAAiBE,QAAS,CAACC,QAAD,CAAW,CACnC,GAAwB,QAAxB,GAAI,MAAOA,SAAX,EAAoCF,UAAA,CAAWE,QAAX,CAApC,CAA0D,MAAOA,SACjE,MAAMC,UAAA,CAAU,YAAV,CAAyBC,MAAA,CAAOF,QAAP,CAAzB,CAA4C,iBAA5C,CAAN,CAFmC,CAHuF;\",\n\"sources\":[\"node_modules/core-js-pure/internals/a-possible-prototype.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$core_js_pure$internals$a_possible_prototype\\\"] = function(global,require,module,exports) {\\nvar isCallable = require('../internals/is-callable');\\n\\nmodule.exports = function (argument) {\\n  if (typeof argument === 'object' || isCallable(argument)) return argument;\\n  throw TypeError(\\\"Can't set \\\" + String(argument) + ' as a prototype');\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"isCallable\",\"module.exports\",\"argument\",\"TypeError\",\"String\"]\n}\n"]