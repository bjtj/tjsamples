["^ ","~:output",["^ ","~:js","goog.provide('reagent.impl.component');\r\nvar module$node_modules$react$index=shadow.js.require(\"module$node_modules$react$index\", {});\r\nreagent.impl.component.extract_props = (function reagent$impl$component$extract_props(v){\r\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null);\r\nif(cljs.core.map_QMARK_(p)){\r\nreturn p;\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreagent.impl.component.extract_children = (function reagent$impl$component$extract_children(v){\r\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null);\r\nvar first_child = (((((p == null)) || (cljs.core.map_QMARK_(p))))?(2):(1));\r\nif((cljs.core.count(v) > first_child)){\r\nreturn cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(v,first_child);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreagent.impl.component.props_argv = (function reagent$impl$component$props_argv(c,p){\r\nvar temp__5737__auto__ = p.argv;\r\nif((temp__5737__auto__ == null)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c.constructor,reagent.impl.util.shallow_obj_to_map(p)], null);\r\n} else {\r\nvar a = temp__5737__auto__;\r\nreturn a;\r\n}\r\n});\r\nreagent.impl.component.get_argv = (function reagent$impl$component$get_argv(c){\r\nreturn reagent.impl.component.props_argv(c,c.props);\r\n});\r\nreagent.impl.component.get_props = (function reagent$impl$component$get_props(c){\r\nvar p = c.props;\r\nvar temp__5737__auto__ = p.argv;\r\nif((temp__5737__auto__ == null)){\r\nreturn reagent.impl.util.shallow_obj_to_map(p);\r\n} else {\r\nvar v = temp__5737__auto__;\r\nreturn reagent.impl.component.extract_props(v);\r\n}\r\n});\r\nreagent.impl.component.get_children = (function reagent$impl$component$get_children(c){\r\nvar p = c.props;\r\nvar temp__5737__auto__ = p.argv;\r\nif((temp__5737__auto__ == null)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,module$node_modules$react$index.Children.toArray(p.children));\r\n} else {\r\nvar v = temp__5737__auto__;\r\nreturn reagent.impl.component.extract_children(v);\r\n}\r\n});\r\nreagent.impl.component.reagent_class_QMARK_ = (function reagent$impl$component$reagent_class_QMARK_(c){\r\nreturn ((cljs.core.fn_QMARK_(c)) && ((!(((function (){var G__77267 = c;\r\nvar G__77267__$1 = (((G__77267 == null))?null:G__77267.prototype);\r\nif((G__77267__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn G__77267__$1.reagentRender;\r\n}\r\n})() == null)))));\r\n});\r\nreagent.impl.component.react_class_QMARK_ = (function reagent$impl$component$react_class_QMARK_(c){\r\nreturn ((cljs.core.fn_QMARK_(c)) && ((!(((function (){var G__77284 = c;\r\nvar G__77284__$1 = (((G__77284 == null))?null:G__77284.prototype);\r\nif((G__77284__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn G__77284__$1.render;\r\n}\r\n})() == null)))));\r\n});\r\nreagent.impl.component.reagent_component_QMARK_ = (function reagent$impl$component$reagent_component_QMARK_(c){\r\nreturn (!((c.reagentRender == null)));\r\n});\r\nreagent.impl.component.state_atom = (function reagent$impl$component$state_atom(this$){\r\nvar sa = this$.cljsState;\r\nif((!((sa == null)))){\r\nreturn sa;\r\n} else {\r\nreturn (this$.cljsState = reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1(null));\r\n}\r\n});\r\n/**\r\n * Calls the render function of the component `c`.  If result `res` evaluates to a:\r\n *   1) Vector (form-1 component) - Treats the vector as hiccup and returns\r\n *      a react element with a render function based on that hiccup\r\n *   2) Function (form-2 component) - updates the render function to `res` i.e. the internal function\r\n *      and calls wrap-render again (`recur`), until the render result doesn't evaluate to a function.\r\n *   3) Anything else - Returns the result of evaluating `c`\r\n */\r\nreagent.impl.component.wrap_render = (function reagent$impl$component$wrap_render(c,compiler){\r\nwhile(true){\r\nvar f = c.reagentRender;\r\nvar _ = ((cljs.core.ifn_QMARK_(f))?null:(function(){throw (new Error([\"Assert failed: \",[\"Expected something callable, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(''),\"\\n\",\"(clojure.core/ifn? f)\"].join('')))})());\r\nvar res = ((c.cljsLegacyRender === true)?f.call(c,c):(function (){var v = reagent.impl.component.get_argv(c);\r\nvar n = cljs.core.count(v);\r\nvar G__77316 = n;\r\nswitch (G__77316) {\r\ncase (1):\r\nreturn f.call(c);\r\n\r\nbreak;\r\ncase (2):\r\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)));\r\n\r\nbreak;\r\ncase (3):\r\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(2)));\r\n\r\nbreak;\r\ncase (4):\r\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(2)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(3)));\r\n\r\nbreak;\r\ncase (5):\r\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(2)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(3)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(4)));\r\n\r\nbreak;\r\ndefault:\r\nreturn f.apply(c,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(v).slice((1)));\r\n\r\n}\r\n})());\r\nif(cljs.core.vector_QMARK_(res)){\r\nreturn reagent.impl.protocols.as_element(compiler,res);\r\n} else {\r\nif(cljs.core.ifn_QMARK_(res)){\r\nvar f__$1 = ((reagent.impl.component.reagent_class_QMARK_(res))?((function (c,compiler,f,_,res){\r\nreturn (function() { \r\nvar G__77417__delegate = function (args){\r\nreturn reagent.impl.protocols.as_element(compiler,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,res,args));\r\n};\r\nvar G__77417 = function (var_args){\r\nvar args = null;\r\nif (arguments.length > 0) {\r\nvar G__77418__i = 0, G__77418__a = new Array(arguments.length -  0);\r\nwhile (G__77418__i < G__77418__a.length) {G__77418__a[G__77418__i] = arguments[G__77418__i + 0]; ++G__77418__i;}\r\n  args = new cljs.core.IndexedSeq(G__77418__a,0,null);\r\n} \r\nreturn G__77417__delegate.call(this,args);};\r\nG__77417.cljs$lang$maxFixedArity = 0;\r\nG__77417.cljs$lang$applyTo = (function (arglist__77419){\r\nvar args = cljs.core.seq(arglist__77419);\r\nreturn G__77417__delegate(args);\r\n});\r\nG__77417.cljs$core$IFn$_invoke$arity$variadic = G__77417__delegate;\r\nreturn G__77417;\r\n})()\r\n;})(c,compiler,f,_,res))\r\n:res);\r\n(c.reagentRender = f__$1);\r\n\r\nvar G__77420 = c;\r\nvar G__77421 = compiler;\r\nc = G__77420;\r\ncompiler = G__77421;\r\ncontinue;\r\n} else {\r\nreturn res;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\nreagent.impl.component.component_name = (function reagent$impl$component$component_name(c){\r\nvar or__4126__auto__ = (function (){var G__77320 = c;\r\nvar G__77320__$1 = (((G__77320 == null))?null:G__77320.constructor);\r\nif((G__77320__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn G__77320__$1.displayName;\r\n}\r\n})();\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nvar G__77321 = c;\r\nvar G__77321__$1 = (((G__77321 == null))?null:G__77321.constructor);\r\nif((G__77321__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn G__77321__$1.name;\r\n}\r\n}\r\n});\r\nreagent.impl.component.comp_name = (function reagent$impl$component$comp_name(){\r\nvar c = reagent.impl.component._STAR_current_component_STAR_;\r\nvar n = reagent.impl.component.component_name(c);\r\nif((!(cljs.core.empty_QMARK_(n)))){\r\nreturn [\" (in \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(n),\")\"].join('');\r\n} else {\r\nreturn \"\";\r\n}\r\n\r\n});\r\nreagent.impl.component.do_render = (function reagent$impl$component$do_render(c,compiler){\r\nvar _STAR_current_component_STAR__orig_val__77322 = reagent.impl.component._STAR_current_component_STAR_;\r\nvar _STAR_current_component_STAR__temp_val__77323 = c;\r\n(reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR__temp_val__77323);\r\n\r\ntry{var ok = [false];\r\ntry{var res = reagent.impl.component.wrap_render(c,compiler);\r\n(ok[(0)] = true);\r\n\r\nreturn res;\r\n}finally {if(cljs.core.truth_((ok[(0)]))){\r\n} else {\r\nif(reagent.debug.has_console){\r\n((reagent.debug.tracking)?reagent.debug.track_console:console).error([\"Error rendering component\",reagent.impl.component.comp_name()].join(''));\r\n} else {\r\n}\r\n}\r\n}\r\n}finally {(reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR__orig_val__77322);\r\n}});\r\nreagent.impl.component.rat_opts = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370),true], null);\r\nreagent.impl.component.custom_wrapper = (function reagent$impl$component$custom_wrapper(key,f){\r\nvar G__77330 = key;\r\nvar G__77330__$1 = (((G__77330 instanceof cljs.core.Keyword))?G__77330.fqn:null);\r\nswitch (G__77330__$1) {\r\ncase \"getDefaultProps\":\r\nthrow (new Error(\"getDefaultProps not supported\"));\r\n\r\nbreak;\r\ncase \"getDerivedStateFromProps\":\r\nreturn (function reagent$impl$component$custom_wrapper_$_getDerivedStateFromProps(props,state){\r\nreturn f.call(null,(function (){var temp__5737__auto__ = props.argv;\r\nif((temp__5737__auto__ == null)){\r\nreturn props;\r\n} else {\r\nvar a = temp__5737__auto__;\r\nreturn reagent.impl.component.extract_props(a);\r\n}\r\n})(),state);\r\n});\r\n\r\nbreak;\r\ncase \"getInitialState\":\r\nreturn (function reagent$impl$component$custom_wrapper_$_getInitialState(c){\r\nreturn cljs.core.reset_BANG_(reagent.impl.component.state_atom(c),f.call(c,c));\r\n});\r\n\r\nbreak;\r\ncase \"getSnapshotBeforeUpdate\":\r\nreturn (function reagent$impl$component$custom_wrapper_$_getSnapshotBeforeUpdate(oldprops,oldstate){\r\nvar c = this;\r\nreturn f.call(c,c,reagent.impl.component.props_argv(c,oldprops),oldstate);\r\n});\r\n\r\nbreak;\r\ncase \"componentWillReceiveProps\":\r\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillReceiveProps(nextprops){\r\nvar c = this;\r\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops));\r\n});\r\n\r\nbreak;\r\ncase \"UNSAFE_componentWillReceiveProps\":\r\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillReceiveProps(nextprops){\r\nvar c = this;\r\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops));\r\n});\r\n\r\nbreak;\r\ncase \"shouldComponentUpdate\":\r\nreturn (function reagent$impl$component$custom_wrapper_$_shouldComponentUpdate(nextprops,nextstate){\r\nvar or__4126__auto__ = reagent.impl.util._STAR_always_update_STAR_;\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nvar c = this;\r\nvar old_argv = c.props.argv;\r\nvar new_argv = nextprops.argv;\r\nvar noargv = (((old_argv == null)) || ((new_argv == null)));\r\nif((f == null)){\r\nvar or__4126__auto____$1 = noargv;\r\nif(or__4126__auto____$1){\r\nreturn or__4126__auto____$1;\r\n} else {\r\ntry{return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(old_argv,new_argv);\r\n}catch (e77332){var e = e77332;\r\nif(reagent.debug.has_console){\r\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",\"Exception thrown while comparing argv's in shouldComponentUpdate: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(old_argv),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new_argv),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(''));\r\n} else {\r\n}\r\n\r\nreturn false;\r\n}}\r\n} else {\r\nif(noargv){\r\nreturn f.call(c,c,reagent.impl.component.get_argv(c),reagent.impl.component.props_argv(c,nextprops));\r\n} else {\r\nreturn f.call(c,c,old_argv,new_argv);\r\n\r\n}\r\n}\r\n}\r\n});\r\n\r\nbreak;\r\ncase \"componentWillUpdate\":\r\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillUpdate(nextprops,nextstate){\r\nvar c = this;\r\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops),nextstate);\r\n});\r\n\r\nbreak;\r\ncase \"UNSAFE_componentWillUpdate\":\r\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillUpdate(nextprops,nextstate){\r\nvar c = this;\r\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops),nextstate);\r\n});\r\n\r\nbreak;\r\ncase \"componentDidUpdate\":\r\nreturn (function reagent$impl$component$custom_wrapper_$_componentDidUpdate(oldprops,oldstate,snapshot){\r\nvar c = this;\r\nreturn f.call(c,c,reagent.impl.component.props_argv(c,oldprops),oldstate,snapshot);\r\n});\r\n\r\nbreak;\r\ncase \"componentWillMount\":\r\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillMount(){\r\nvar c = this;\r\nreturn f.call(c,c);\r\n});\r\n\r\nbreak;\r\ncase \"UNSAFE_componentWillMount\":\r\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillMount(){\r\nvar c = this;\r\nreturn f.call(c,c);\r\n});\r\n\r\nbreak;\r\ncase \"componentDidMount\":\r\nreturn (function reagent$impl$component$custom_wrapper_$_componentDidMount(){\r\nvar c = this;\r\nreturn f.call(c,c);\r\n});\r\n\r\nbreak;\r\ncase \"componentWillUnmount\":\r\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillUnmount(){\r\nvar c = this;\r\nvar G__77333_77424 = goog.object.get(c,\"cljsRatom\");\r\nif((G__77333_77424 == null)){\r\n} else {\r\nreagent.ratom.dispose_BANG_(G__77333_77424);\r\n}\r\n\r\nreagent.impl.batching.mark_rendered(c);\r\n\r\nif((f == null)){\r\nreturn null;\r\n} else {\r\nreturn f.call(c,c);\r\n}\r\n});\r\n\r\nbreak;\r\ncase \"componentDidCatch\":\r\nreturn (function reagent$impl$component$custom_wrapper_$_componentDidCatch(error,info){\r\nvar c = this;\r\nreturn f.call(c,c,error,info);\r\n});\r\n\r\nbreak;\r\ndefault:\r\nreturn null;\r\n\r\n}\r\n});\r\nreagent.impl.component.get_wrapper = (function reagent$impl$component$get_wrapper(key,f){\r\nvar wrap = reagent.impl.component.custom_wrapper(key,f);\r\nif(cljs.core.truth_((function (){var and__4115__auto__ = wrap;\r\nif(cljs.core.truth_(and__4115__auto__)){\r\nreturn f;\r\n} else {\r\nreturn and__4115__auto__;\r\n}\r\n})())){\r\nif(cljs.core.ifn_QMARK_(f)){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",[\"Expected something callable, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(''),\"\\n\",\"(clojure.core/ifn? f)\"].join('')));\r\n}\r\n} else {\r\n}\r\n\r\nvar or__4126__auto__ = wrap;\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nreturn f;\r\n}\r\n});\r\nreagent.impl.component.obligatory = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"shouldComponentUpdate\",\"shouldComponentUpdate\",1795750960),null,new cljs.core.Keyword(null,\"componentWillUnmount\",\"componentWillUnmount\",1573788814),null], null);\r\nreagent.impl.component.dash_to_method_name = reagent.impl.util.memoize_1(reagent.impl.util.dash_to_method_name);\r\nreagent.impl.component.camelify_map_keys = (function reagent$impl$component$camelify_map_keys(fun_map){\r\nreturn cljs.core.reduce_kv((function (m,k,v){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(reagent.impl.component.dash_to_method_name(k)),v);\r\n}),cljs.core.PersistentArrayMap.EMPTY,fun_map);\r\n});\r\nreagent.impl.component.add_obligatory = (function reagent$impl$component$add_obligatory(fun_map){\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([reagent.impl.component.obligatory,fun_map], 0));\r\n});\r\nreagent.impl.component.wrap_funs = (function reagent$impl$component$wrap_funs(fmap,compiler){\r\nvar renders_77426 = cljs.core.select_keys(fmap,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383)], null));\r\nvar render_fun_77427 = cljs.core.first(cljs.core.vals(renders_77426));\r\nif(cljs.core.not(new cljs.core.Keyword(null,\"componentFunction\",\"componentFunction\",825866104).cljs$core$IFn$_invoke$arity$1(fmap))){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",\":component-function is no longer supported, use :reagent-render instead.\",\"\\n\",\"(not (:componentFunction fmap))\"].join('')));\r\n}\r\n\r\nif((cljs.core.count(renders_77426) > (0))){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",\"Missing reagent-render\",\"\\n\",\"(pos? (count renders))\"].join('')));\r\n}\r\n\r\nif(((1) === cljs.core.count(renders_77426))){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",\"Too many render functions supplied\",\"\\n\",\"(== 1 (count renders))\"].join('')));\r\n}\r\n\r\nif(cljs.core.ifn_QMARK_(render_fun_77427)){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",[\"Expected something callable, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([render_fun_77427], 0))].join(''),\"\\n\",\"(clojure.core/ifn? render-fun)\"].join('')));\r\n}\r\n\r\n\r\nvar render_fun = (function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383).cljs$core$IFn$_invoke$arity$1(fmap);\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"render\",\"render\",-1408033454).cljs$core$IFn$_invoke$arity$1(fmap);\r\n}\r\n})();\r\nvar legacy_render = (new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383).cljs$core$IFn$_invoke$arity$1(fmap) == null);\r\nvar name = (function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"displayName\",\"displayName\",-809144601).cljs$core$IFn$_invoke$arity$1(fmap);\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nvar or__4126__auto____$1 = reagent.impl.util.fun_name(render_fun);\r\nif(cljs.core.truth_(or__4126__auto____$1)){\r\nreturn or__4126__auto____$1;\r\n} else {\r\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"reagent\"));\r\n}\r\n}\r\n})();\r\nvar fmap__$1 = cljs.core.reduce_kv((function (m,k,v){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,reagent.impl.component.get_wrapper(k,v));\r\n}),cljs.core.PersistentArrayMap.EMPTY,fmap);\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(fmap__$1,new cljs.core.Keyword(null,\"displayName\",\"displayName\",-809144601),name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"cljsLegacyRender\",\"cljsLegacyRender\",-1527295613),legacy_render,new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383),render_fun,new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),(function reagent$impl$component$wrap_funs_$_render(){\r\nvar c = this;\r\nif(reagent.impl.util._STAR_non_reactive_STAR_){\r\nreturn reagent.impl.component.do_render(c,compiler);\r\n} else {\r\nvar rat = goog.object.get(c,\"cljsRatom\");\r\nreagent.impl.batching.mark_rendered(c);\r\n\r\nif((rat == null)){\r\nreturn reagent.ratom.run_in_reaction((function (){\r\nreturn reagent.impl.component.do_render(c,compiler);\r\n}),c,\"cljsRatom\",reagent.impl.batching.queue_render,reagent.impl.component.rat_opts);\r\n} else {\r\nreturn rat._run(false);\r\n}\r\n}\r\n})], 0));\r\n});\r\nreagent.impl.component.map_to_js = (function reagent$impl$component$map_to_js(m){\r\nreturn cljs.core.reduce_kv((function (o,k,v){\r\nvar G__77370 = o;\r\ngoog.object.set(G__77370,cljs.core.name(k),v);\r\n\r\nreturn G__77370;\r\n}),({}),m);\r\n});\r\nreagent.impl.component.cljsify = (function reagent$impl$component$cljsify(body,compiler){\r\nreturn reagent.impl.component.wrap_funs(reagent.impl.component.add_obligatory(reagent.impl.component.camelify_map_keys(body)),compiler);\r\n});\r\nreagent.impl.component.built_in_static_method_names = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"childContextTypes\",\"childContextTypes\",578717991),new cljs.core.Keyword(null,\"contextTypes\",\"contextTypes\",-2023853910),new cljs.core.Keyword(null,\"contextType\",\"contextType\",1033066077),new cljs.core.Keyword(null,\"getDerivedStateFromProps\",\"getDerivedStateFromProps\",-991834739),new cljs.core.Keyword(null,\"getDerivedStateFromError\",\"getDerivedStateFromError\",166658477)], null);\r\n/**\r\n * Creates JS class based on provided Clojure map.\r\n * \r\n *   Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\r\n *   and can be provided in snake-case or camelCase.\r\n *   Constructor function is defined using key `:getInitialState`.\r\n * \r\n *   React built-in static methods or properties are automatically defined as statics.\r\n */\r\nreagent.impl.component.create_class = (function reagent$impl$component$create_class(body,compiler){\r\nif(cljs.core.map_QMARK_(body)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (map? body)\"));\r\n}\r\n\r\nvar body__$1 = reagent.impl.component.cljsify(body,compiler);\r\nvar methods$ = reagent.impl.component.map_to_js(cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.dissoc,body__$1,new cljs.core.Keyword(null,\"displayName\",\"displayName\",-809144601),new cljs.core.Keyword(null,\"getInitialState\",\"getInitialState\",1541760916),new cljs.core.Keyword(null,\"constructor\",\"constructor\",-1953928811),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383),reagent.impl.component.built_in_static_method_names], 0)));\r\nvar static_methods = reagent.impl.component.map_to_js(cljs.core.select_keys(body__$1,reagent.impl.component.built_in_static_method_names));\r\nvar display_name = new cljs.core.Keyword(null,\"displayName\",\"displayName\",-809144601).cljs$core$IFn$_invoke$arity$1(body__$1);\r\nvar get_initial_state = new cljs.core.Keyword(null,\"getInitialState\",\"getInitialState\",1541760916).cljs$core$IFn$_invoke$arity$1(body__$1);\r\nvar construct = new cljs.core.Keyword(null,\"constructor\",\"constructor\",-1953928811).cljs$core$IFn$_invoke$arity$1(body__$1);\r\nvar cmp = (function (props,context,updater){\r\nvar this$ = this;\r\nmodule$node_modules$react$index.Component.call(this$,props,context,updater);\r\n\r\nif(cljs.core.truth_(construct)){\r\n(construct.cljs$core$IFn$_invoke$arity$2 ? construct.cljs$core$IFn$_invoke$arity$2(this$,props) : construct.call(null,this$,props));\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_(get_initial_state)){\r\n(this$.state = (get_initial_state.cljs$core$IFn$_invoke$arity$1 ? get_initial_state.cljs$core$IFn$_invoke$arity$1(this$) : get_initial_state.call(null,this$)));\r\n} else {\r\n}\r\n\r\n(this$.cljsMountOrder = reagent.impl.batching.next_mount_count());\r\n\r\nreturn this$;\r\n});\r\ngoog.object.extend(cmp.prototype,module$node_modules$react$index.Component.prototype,methods$);\r\n\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"render\",\"render\",-1408033454).cljs$core$IFn$_invoke$arity$1(body__$1))){\r\n(cmp.prototype.render = new cljs.core.Keyword(null,\"render\",\"render\",-1408033454).cljs$core$IFn$_invoke$arity$1(body__$1));\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383).cljs$core$IFn$_invoke$arity$1(body__$1))){\r\n(cmp.prototype.reagentRender = new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383).cljs$core$IFn$_invoke$arity$1(body__$1));\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"cljsLegacyRender\",\"cljsLegacyRender\",-1527295613).cljs$core$IFn$_invoke$arity$1(body__$1))){\r\n(cmp.prototype.cljsLegacyRender = new cljs.core.Keyword(null,\"cljsLegacyRender\",\"cljsLegacyRender\",-1527295613).cljs$core$IFn$_invoke$arity$1(body__$1));\r\n} else {\r\n}\r\n\r\ngoog.object.extend(cmp,module$node_modules$react$index.Component,static_methods);\r\n\r\nif(cljs.core.truth_(display_name)){\r\n(cmp.displayName = display_name);\r\n\r\n(cmp.cljs$lang$ctorStr = display_name);\r\n\r\n(cmp.cljs$lang$ctorPrWriter = (function (this$,writer,opt){\r\nreturn cljs.core._write(writer,display_name);\r\n}));\r\n} else {\r\n}\r\n\r\n(cmp.cljs$lang$type = true);\r\n\r\n(cmp.prototype.constructor = cmp);\r\n\r\nreturn cmp;\r\n});\r\nreagent.impl.component.cached_react_class = (function reagent$impl$component$cached_react_class(compiler,c){\r\nreturn goog.object.get(c,reagent.impl.protocols.get_id(compiler));\r\n});\r\nreagent.impl.component.cache_react_class = (function reagent$impl$component$cache_react_class(compiler,c,constructor$){\r\ngoog.object.set(c,reagent.impl.protocols.get_id(compiler),constructor$);\r\n\r\nreturn constructor$;\r\n});\r\nreagent.impl.component.fn_to_class = (function reagent$impl$component$fn_to_class(compiler,f){\r\nif(cljs.core.ifn_QMARK_(f)){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",[\"Expected something callable, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(''),\"\\n\",\"(clojure.core/ifn? f)\"].join('')));\r\n}\r\n\r\nif((!((!(((reagent.impl.component.react_class_QMARK_(f)) && ((!(reagent.impl.component.reagent_class_QMARK_(f)))))))))){\r\nif(reagent.debug.has_console){\r\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",\"Using native React classes directly in Hiccup forms \",\"is not supported. Use create-element or \",\"adapt-react-class instead: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__4126__auto__ = reagent.impl.util.fun_name(f);\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nreturn f;\r\n}\r\n})()),reagent.impl.component.comp_name()].join(''));\r\n} else {\r\n}\r\n} else {\r\n}\r\n\r\nif(reagent.impl.component.reagent_class_QMARK_(f)){\r\nreturn reagent.impl.component.cache_react_class(compiler,f,f);\r\n} else {\r\nvar spec = cljs.core.meta(f);\r\nvar withrender = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(spec,new cljs.core.Keyword(null,\"reagent-render\",\"reagent-render\",-985383853),f);\r\nvar res = reagent.impl.component.create_class(withrender,compiler);\r\nreturn reagent.impl.component.cache_react_class(compiler,f,res);\r\n}\r\n});\r\nreagent.impl.component.as_class = (function reagent$impl$component$as_class(tag,compiler){\r\nvar temp__5737__auto__ = reagent.impl.component.cached_react_class(compiler,tag);\r\nif((temp__5737__auto__ == null)){\r\nreturn reagent.impl.component.fn_to_class(compiler,tag);\r\n} else {\r\nvar cached_class = temp__5737__auto__;\r\nreturn cached_class;\r\n}\r\n});\r\nreagent.impl.component.reactify_component = (function reagent$impl$component$reactify_component(comp,compiler){\r\nif(reagent.impl.component.react_class_QMARK_(comp)){\r\nreturn comp;\r\n} else {\r\nreturn reagent.impl.component.as_class(comp,compiler);\r\n}\r\n});\r\nreagent.impl.component.functional_wrap_render = (function reagent$impl$component$functional_wrap_render(compiler,c){\r\nwhile(true){\r\nvar f = c.reagentRender;\r\nvar _ = ((cljs.core.ifn_QMARK_(f))?null:(function(){throw (new Error([\"Assert failed: \",[\"Expected something callable, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(''),\"\\n\",\"(clojure.core/ifn? f)\"].join('')))})());\r\nvar argv = c.argv;\r\nvar res = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,argv);\r\nif(cljs.core.vector_QMARK_(res)){\r\nreturn reagent.impl.protocols.as_element(compiler,res);\r\n} else {\r\nif(cljs.core.ifn_QMARK_(res)){\r\nvar f__$1 = ((reagent.impl.component.reagent_class_QMARK_(res))?((function (compiler,c,f,_,argv,res){\r\nreturn (function() { \r\nvar G__77429__delegate = function (args){\r\nreturn reagent.impl.protocols.as_element(compiler,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,res,args));\r\n};\r\nvar G__77429 = function (var_args){\r\nvar args = null;\r\nif (arguments.length > 0) {\r\nvar G__77430__i = 0, G__77430__a = new Array(arguments.length -  0);\r\nwhile (G__77430__i < G__77430__a.length) {G__77430__a[G__77430__i] = arguments[G__77430__i + 0]; ++G__77430__i;}\r\n  args = new cljs.core.IndexedSeq(G__77430__a,0,null);\r\n} \r\nreturn G__77429__delegate.call(this,args);};\r\nG__77429.cljs$lang$maxFixedArity = 0;\r\nG__77429.cljs$lang$applyTo = (function (arglist__77431){\r\nvar args = cljs.core.seq(arglist__77431);\r\nreturn G__77429__delegate(args);\r\n});\r\nG__77429.cljs$core$IFn$_invoke$arity$variadic = G__77429__delegate;\r\nreturn G__77429;\r\n})()\r\n;})(compiler,c,f,_,argv,res))\r\n:res);\r\n(c.reagentRender = f__$1);\r\n\r\nvar G__77432 = compiler;\r\nvar G__77433 = c;\r\ncompiler = G__77432;\r\nc = G__77433;\r\ncontinue;\r\n} else {\r\nreturn res;\r\n\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\nreagent.impl.component.functional_do_render = (function reagent$impl$component$functional_do_render(compiler,c){\r\nvar _STAR_current_component_STAR__orig_val__77405 = reagent.impl.component._STAR_current_component_STAR_;\r\nvar _STAR_current_component_STAR__temp_val__77406 = c;\r\n(reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR__temp_val__77406);\r\n\r\ntry{var ok = [false];\r\ntry{var res = reagent.impl.component.functional_wrap_render(compiler,c);\r\n(ok[(0)] = true);\r\n\r\nreturn res;\r\n}finally {if(cljs.core.truth_((ok[(0)]))){\r\n} else {\r\nif(reagent.debug.has_console){\r\n((reagent.debug.tracking)?reagent.debug.track_console:console).error([\"Error rendering component\",reagent.impl.component.comp_name()].join(''));\r\n} else {\r\n}\r\n}\r\n}\r\n}finally {(reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR__orig_val__77405);\r\n}});\r\nreagent.impl.component.functional_render = (function reagent$impl$component$functional_render(compiler,jsprops){\r\nif(reagent.impl.util._STAR_non_reactive_STAR_){\r\nreturn reagent.impl.component.functional_do_render(compiler,jsprops);\r\n} else {\r\nvar argv = jsprops.argv;\r\nvar tag = jsprops.reagentRender;\r\nvar vec__77407 = module$node_modules$react$index.useState((0));\r\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77407,(0),null);\r\nvar update_count = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77407,(1),null);\r\nvar state_ref = module$node_modules$react$index.useRef();\r\nvar ___$1 = (cljs.core.truth_(state_ref.current)?null:(function (){var obj = ({});\r\n(obj.forceUpdate = (function (){\r\nreturn (update_count.cljs$core$IFn$_invoke$arity$1 ? update_count.cljs$core$IFn$_invoke$arity$1(cljs.core.inc) : update_count.call(null,cljs.core.inc));\r\n}));\r\n\r\n(obj.cljsMountOrder = reagent.impl.batching.next_mount_count());\r\n\r\n(obj.constructor = tag);\r\n\r\n(obj.reagentRender = tag);\r\n\r\nreturn (state_ref.current = obj);\r\n})());\r\nvar reagent_state = state_ref.current;\r\nvar rat = goog.object.get(reagent_state,\"cljsRatom\");\r\nmodule$node_modules$react$index.useEffect((function reagent$impl$component$functional_render_$_mount(){\r\nreturn (function reagent$impl$component$functional_render_$_mount_$_unmount(){\r\nvar G__77410 = goog.object.get(reagent_state,\"cljsRatom\");\r\nif((G__77410 == null)){\r\nreturn null;\r\n} else {\r\nreturn reagent.ratom.dispose_BANG_(G__77410);\r\n}\r\n});\r\n}),[]);\r\n\r\n(reagent_state.argv = argv);\r\n\r\nreagent.impl.batching.mark_rendered(reagent_state);\r\n\r\nif((rat == null)){\r\nreturn reagent.ratom.run_in_reaction((function (){\r\nreturn reagent.impl.component.functional_do_render(compiler,reagent_state);\r\n}),reagent_state,\"cljsRatom\",reagent.impl.batching.queue_render,reagent.impl.component.rat_opts);\r\n} else {\r\nreturn rat._run(false);\r\n}\r\n}\r\n});\r\nreagent.impl.component.functional_render_memo_fn = (function reagent$impl$component$functional_render_memo_fn(prev_props,next_props){\r\nvar old_argv = prev_props.argv;\r\nvar new_argv = next_props.argv;\r\nif(reagent.impl.util._STAR_always_update_STAR_ === false){\r\ntry{return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(old_argv,new_argv);\r\n}catch (e77412){var e = e77412;\r\nif(reagent.debug.has_console){\r\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",\"Exception thrown while comparing argv's in shouldComponentUpdate: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(old_argv),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new_argv),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(''));\r\n} else {\r\n}\r\n\r\nreturn false;\r\n}} else {\r\nreturn false;\r\n}\r\n});\r\n/**\r\n * Create copy of functional-render with displayName set to name of the\r\n *   original Reagent component.\r\n */\r\nreagent.impl.component.functional_render_fn = (function reagent$impl$component$functional_render_fn(compiler,tag){\r\nvar or__4126__auto__ = reagent.impl.component.cached_react_class(compiler,tag);\r\nif(cljs.core.truth_(or__4126__auto__)){\r\nreturn or__4126__auto__;\r\n} else {\r\nvar f = (function (jsprops){\r\nreturn reagent.impl.component.functional_render(compiler,jsprops);\r\n});\r\nvar _ = (f.displayName = reagent.impl.util.fun_name(tag));\r\nvar f__$1 = module$node_modules$react$index.memo(f,reagent.impl.component.functional_render_memo_fn);\r\nreagent.impl.component.cache_react_class(compiler,tag,f__$1);\r\n\r\nreturn f__$1;\r\n}\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/impl/component.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",27],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$dev?","~$reagent.debug","~$warn","^H","~$error","^H","~$warn-unless","^H","~$assert-callable","^H"],"~:excludes",["~#set",[]],"~:name","~$reagent.impl.component","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^U","~$reagent.impl.protocols","^V","~$p","^V","~$reagent.ratom","^W","^B","^C","~$cljs.core","^X","^C","^C","~$gobj","~$goog.object","~$goog","^[","^Z","^Z","~$reagent.impl.batching","^10","~$util","^U","~$ratom","^W","~$batch","^10","^H","^H"],"~:seen",["^N",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^H","^H","^X","^X","^W","^W","^12","^W"],"~:form",["~#list",["~$ns","^P",["^19",["^15",["^Z","~:as","^Y"],["^B","^1;","^B"],["^U","^1;","^11"],["^10","^1;","^13"],["^V","^1;","~$p"],["^W","^1;","^12"],["^H","~:refer-macros",["^G","^I","^J","^K","^L"]]]]]],"~:flags",["^ ","^15",["^N",[]]],"~:js-deps",["^ "],"~:deps",["^[","^X","^Z","^C","^U","^10","^V","^W","^H"]],"^R","^P","~:resource-id",["~:shadow.build.classpath/resource","reagent/impl/component.cljs"],"~:compiled-at",1633159637119,"~:resource-name","reagent/impl/component.cljs","~:warnings",[],"~:source","(ns reagent.impl.component\n  (:require [goog.object :as gobj]\n            [react :as react]\n            [reagent.impl.util :as util]\n            [reagent.impl.batching :as batch]\n            [reagent.impl.protocols :as p]\n            [reagent.ratom :as ratom]\n            [reagent.debug :refer-macros [dev? warn error warn-unless assert-callable]]))\n\n(declare ^:dynamic *current-component*)\n\n\n;;; Argv access\n\n(defn extract-props [v]\n  (let [p (nth v 1 nil)]\n    (if (map? p) p)))\n\n(defn extract-children [v]\n  (let [p (nth v 1 nil)\n        first-child (if (or (nil? p) (map? p)) 2 1)]\n    (if (> (count v) first-child)\n      (subvec v first-child))))\n\n(defn props-argv [^js/React.Component c p]\n  (if-some [a (.-argv p)]\n    a\n    [(.-constructor c) (util/shallow-obj-to-map p)]))\n\n(defn get-argv [^js/React.Component c]\n  (props-argv c (.-props c)))\n\n(defn get-props [^js/React.Component c]\n  (let [p (.-props c)]\n    (if-some [v (.-argv p)]\n      (extract-props v)\n      (util/shallow-obj-to-map p))))\n\n(defn get-children [^js/React.Component c]\n  (let [p (.-props c)]\n    (if-some [v (.-argv p)]\n      (extract-children v)\n      (->> (.-children p)\n           (react/Children.toArray)\n           (into [])))))\n\n(defn ^boolean reagent-class? [c]\n  (and (fn? c)\n       (some? (some-> c (.-prototype) (.-reagentRender)))))\n\n(defn ^boolean react-class? [c]\n  (and (fn? c)\n       (some? (some-> c (.-prototype) (.-render)))))\n\n(defn ^boolean reagent-component? [^clj c]\n  (some? (.-reagentRender c)))\n\n;;; State\n\n(defn state-atom [^clj this]\n  (let [sa (.-cljsState this)]\n    (if-not (nil? sa)\n      sa\n      (set! (.-cljsState this) (ratom/atom nil)))))\n\n;;; Rendering\n\n(defn wrap-render\n  \"Calls the render function of the component `c`.  If result `res` evaluates to a:\n     1) Vector (form-1 component) - Treats the vector as hiccup and returns\n        a react element with a render function based on that hiccup\n     2) Function (form-2 component) - updates the render function to `res` i.e. the internal function\n        and calls wrap-render again (`recur`), until the render result doesn't evaluate to a function.\n     3) Anything else - Returns the result of evaluating `c`\"\n  [^clj c compiler]\n  (let [f (.-reagentRender c)\n        _ (assert-callable f)\n        ;; cljsLegacyRender tells if this calls was defined\n        ;; using :render instead of :reagent-render\n        ;; in that case, the :render fn is called with just `this` as argument.\n        res (if (true? (.-cljsLegacyRender c))\n              (.call f c c)\n              (let [v (get-argv c)\n                    n (count v)]\n                (case n\n                  1 (.call f c)\n                  2 (.call f c (nth v 1))\n                  3 (.call f c (nth v 1) (nth v 2))\n                  4 (.call f c (nth v 1) (nth v 2) (nth v 3))\n                  5 (.call f c (nth v 1) (nth v 2) (nth v 3) (nth v 4))\n                  (.apply f c (.slice (into-array v) 1)))))]\n    (cond\n      (vector? res) (p/as-element compiler res)\n      (ifn? res) (let [f (if (reagent-class? res)\n                           (fn [& args]\n                             (p/as-element compiler (apply vector res args)))\n                           res)]\n                   (set! (.-reagentRender c) f)\n                   (recur c compiler))\n      :else res)))\n\n(defn component-name [c]\n  (or (some-> c .-constructor .-displayName)\n      (some-> c .-constructor .-name)))\n\n(defn comp-name []\n  (if (dev?)\n    (let [c *current-component*\n          n (component-name c)]\n      (if-not (empty? n)\n        (str \" (in \" n \")\")\n        \"\"))\n    \"\"))\n\n(defn do-render [c compiler]\n  (binding [*current-component* c]\n    (if (dev?)\n      ;; Log errors, without using try/catch (and mess up call stack)\n      (let [ok (array false)]\n        (try\n          (let [res (wrap-render c compiler)]\n            (aset ok 0 true)\n            res)\n          (finally\n            (when-not (aget ok 0)\n              (error (str \"Error rendering component\"\n                          (comp-name)))))))\n      (wrap-render c compiler))))\n\n\n;;; Method wrapping\n\n(def rat-opts {:no-cache true})\n\n(defn custom-wrapper [key f]\n  (case key\n    :getDefaultProps\n    (throw (js/Error. \"getDefaultProps not supported\"))\n\n    :getDerivedStateFromProps\n    (fn getDerivedStateFromProps [props state]\n      ;; Read props from Reagent argv\n      (.call f nil (if-some [a (.-argv props)] (extract-props a) props) state))\n\n    ;; In ES6 React, this is now part of the constructor\n    :getInitialState\n    (fn getInitialState [c]\n      (reset! (state-atom c) (.call f c c)))\n\n    :getSnapshotBeforeUpdate\n    (fn getSnapshotBeforeUpdate [oldprops oldstate]\n      (this-as c (.call f c c (props-argv c oldprops) oldstate)))\n\n    ;; Deprecated - warning in 16.9 will work through 17.x\n    :componentWillReceiveProps\n    (fn componentWillReceiveProps [nextprops]\n      (this-as c (.call f c c (props-argv c nextprops))))\n\n    ;; Deprecated - will work in 17.x\n    :UNSAFE_componentWillReceiveProps\n    (fn componentWillReceiveProps [nextprops]\n      (this-as c (.call f c c (props-argv c nextprops))))\n\n    :shouldComponentUpdate\n    (fn shouldComponentUpdate [nextprops nextstate]\n      (or util/*always-update*\n          (this-as c\n                   ;; Don't care about nextstate here, we use forceUpdate\n                   ;; when only when state has changed anyway.\n                   (let [old-argv (.. c -props -argv)\n                         new-argv (.-argv nextprops)\n                         noargv (or (nil? old-argv) (nil? new-argv))]\n                     (cond\n                       (nil? f) (or noargv (try (not= old-argv new-argv)\n                                                (catch :default e\n                                                  (warn \"Exception thrown while comparing argv's in shouldComponentUpdate: \" old-argv \" \" new-argv \" \" e)\n                                                  false)))\n                       noargv (.call f c c (get-argv c) (props-argv c nextprops))\n                       :else  (.call f c c old-argv new-argv))))))\n\n    ;; Deprecated - warning in 16.9 will work through 17.x\n    :componentWillUpdate\n    (fn componentWillUpdate [nextprops nextstate]\n      (this-as c (.call f c c (props-argv c nextprops) nextstate)))\n\n    ;; Deprecated - will work in 17.x\n    :UNSAFE_componentWillUpdate\n    (fn componentWillUpdate [nextprops nextstate]\n      (this-as c (.call f c c (props-argv c nextprops) nextstate)))\n\n    :componentDidUpdate\n    (fn componentDidUpdate [oldprops oldstate snapshot]\n      (this-as c (.call f c c (props-argv c oldprops) oldstate snapshot)))\n\n    ;; Deprecated - warning in 16.9 will work through 17.x\n    :componentWillMount\n    (fn componentWillMount []\n      (this-as c (.call f c c)))\n\n    ;; Deprecated - will work in 17.x\n    :UNSAFE_componentWillMount\n    (fn componentWillMount []\n      (this-as c (.call f c c)))\n\n    :componentDidMount\n    (fn componentDidMount []\n      (this-as c (.call f c c)))\n\n    :componentWillUnmount\n    (fn componentWillUnmount []\n      (this-as c\n               (some-> (gobj/get c \"cljsRatom\") ratom/dispose!)\n               (batch/mark-rendered c)\n               (when-not (nil? f)\n                 (.call f c c))))\n\n    :componentDidCatch\n    (fn componentDidCatch [error info]\n      (this-as c (.call f c c error info)))\n\n    nil))\n\n(defn get-wrapper [key f]\n  (let [wrap (custom-wrapper key f)]\n    (when (and wrap f)\n      (assert-callable f))\n    (or wrap f)))\n\n;; Though the value is nil here, the wrapper function will be\n;; added to class to manage Reagent ratom lifecycle.\n(def obligatory {:shouldComponentUpdate nil\n                 :componentWillUnmount nil})\n\n(def dash-to-method-name (util/memoize-1 util/dash-to-method-name))\n\n(defn camelify-map-keys [fun-map]\n  (reduce-kv (fn [m k v]\n               (assoc m (-> k dash-to-method-name keyword) v))\n             {} fun-map))\n\n(defn add-obligatory [fun-map]\n  (merge obligatory fun-map))\n\n(defn wrap-funs [fmap compiler]\n  (when (dev?)\n    (let [renders (select-keys fmap [:render :reagentRender])\n          render-fun (-> renders vals first)]\n      (assert (not (:componentFunction fmap)) \":component-function is no longer supported, use :reagent-render instead.\")\n      (assert (pos? (count renders)) \"Missing reagent-render\")\n      (assert (== 1 (count renders)) \"Too many render functions supplied\")\n      (assert-callable render-fun)))\n  (let [render-fun (or (:reagentRender fmap)\n                       (:render fmap))\n        legacy-render (nil? (:reagentRender fmap))\n        name (or (:displayName fmap)\n                 (util/fun-name render-fun)\n                 (str (gensym \"reagent\")))\n        fmap (reduce-kv (fn [m k v]\n                          (assoc m k (get-wrapper k v)))\n                        {} fmap)]\n    (assoc fmap\n           :displayName name\n           :cljsLegacyRender legacy-render\n           :reagentRender render-fun\n           :render (fn render []\n                     (this-as c (if util/*non-reactive*\n                                  (do-render c compiler)\n                                  (let [^clj rat (gobj/get c \"cljsRatom\")]\n                                    (batch/mark-rendered c)\n                                    (if (nil? rat)\n                                      (ratom/run-in-reaction #(do-render c compiler) c \"cljsRatom\"\n                                                             batch/queue-render rat-opts)\n                                      (._run rat false)))))))))\n\n(defn map-to-js [m]\n  (reduce-kv (fn [o k v]\n               (doto o\n                 (gobj/set (name k) v)))\n             #js{} m))\n\n(defn cljsify [body compiler]\n  (-> body\n      camelify-map-keys\n      add-obligatory\n      (wrap-funs compiler)))\n\n;; Idea from:\n;; https://gist.github.com/pesterhazy/2a25c82db0519a28e415b40481f84554\n;; https://gist.github.com/thheller/7f530b34de1c44589f4e0671e1ef7533#file-es6-class-cljs-L18\n\n(def built-in-static-method-names\n  [:childContextTypes :contextTypes :contextType\n   :getDerivedStateFromProps :getDerivedStateFromError])\n\n(defn create-class\n  \"Creates JS class based on provided Clojure map.\n\n  Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n  and can be provided in snake-case or camelCase.\n  Constructor function is defined using key `:getInitialState`.\n\n  React built-in static methods or properties are automatically defined as statics.\"\n  [body compiler]\n  {:pre [(map? body)]}\n  (let [body (cljsify body compiler)\n        methods (map-to-js (apply dissoc body :displayName :getInitialState :constructor\n                                  :render :reagentRender\n                                  built-in-static-method-names))\n        static-methods (map-to-js (select-keys body built-in-static-method-names))\n        display-name (:displayName body)\n        get-initial-state (:getInitialState body)\n        construct (:constructor body)\n        cmp (fn [props context updater]\n              (this-as ^clj this\n                (.call react/Component this props context updater)\n                (when construct\n                  (construct this props))\n                (when get-initial-state\n                  (set! (.-state this) (get-initial-state this)))\n                (set! (.-cljsMountOrder this) (batch/next-mount-count))\n                this))]\n\n    (gobj/extend (.-prototype cmp) (.-prototype react/Component) methods)\n\n    ;; These names SHOULD be mangled by Closure so we can't use goog/extend\n\n    (when (:render body)\n      (set! (.-render ^js (.-prototype cmp)) (:render body)))\n\n    (when (:reagentRender body)\n      (set! (.-reagentRender ^clj (.-prototype cmp)) (:reagentRender body)))\n\n    (when (:cljsLegacyRender body)\n      (set! (.-cljsLegacyRender ^clj (.-prototype cmp)) (:cljsLegacyRender body)))\n\n    (gobj/extend cmp react/Component static-methods)\n\n    (when display-name\n      (set! (.-displayName cmp) display-name)\n      (set! (.-cljs$lang$ctorStr cmp) display-name)\n      (set! (.-cljs$lang$ctorPrWriter cmp)\n            (fn [this writer opt]\n              (cljs.core/-write writer display-name))))\n\n    (set! (.-cljs$lang$type cmp) true)\n    (set! (.. cmp -prototype -constructor) cmp)\n\n    cmp))\n\n;; Cache result to the tag but per compiler ID\n;; TODO: Generate cache & get methods to the Object using macro,\n;; can generate code calling interop forms.\n(defn cached-react-class [compiler ^clj c]\n  (gobj/get c (p/get-id compiler)))\n\n(defn cache-react-class [compiler ^clj c constructor]\n  (gobj/set c (p/get-id compiler) constructor)\n  constructor)\n\n(defn fn-to-class [compiler f]\n  (assert-callable f)\n  (warn-unless (not (and (react-class? f)\n                         (not (reagent-class? f))))\n               \"Using native React classes directly in Hiccup forms \"\n               \"is not supported. Use create-element or \"\n               \"adapt-react-class instead: \" (or (util/fun-name f)\n                                                 f)\n               (comp-name))\n  (if (reagent-class? f)\n    (cache-react-class compiler f f)\n    (let [spec (meta f)\n          withrender (assoc spec :reagent-render f)\n          res (create-class withrender compiler)]\n      (cache-react-class compiler f res))))\n\n(defn as-class [tag compiler]\n  (if-some [cached-class (cached-react-class compiler tag)]\n    cached-class\n    (fn-to-class compiler tag)))\n\n(defn reactify-component [comp compiler]\n  (if (react-class? comp)\n    comp\n    (as-class comp compiler)))\n\n(defn functional-wrap-render\n  [compiler ^clj c]\n  (let [f (.-reagentRender c)\n        _ (assert-callable f)\n        argv (.-argv c)\n        res (apply f argv)]\n    (cond\n      (vector? res) (p/as-element compiler res)\n      (ifn? res) (let [f (if (reagent-class? res)\n                           (fn [& args]\n                             (p/as-element compiler (apply vector res args)))\n                           res)]\n                   (set! (.-reagentRender c) f)\n                   (recur compiler c))\n      :else res)))\n\n(defn functional-do-render [compiler c]\n  (binding [*current-component* c]\n    (if (dev?)\n      ;; Log errors, without using try/catch (and mess up call stack)\n      (let [ok (array false)]\n        (try\n          (let [res (functional-wrap-render compiler c)]\n            (aset ok 0 true)\n            res)\n          (finally\n            (when-not (aget ok 0)\n              (error (str \"Error rendering component\" (comp-name)))))))\n      (functional-wrap-render compiler c))))\n\n(defn functional-render [compiler ^clj jsprops]\n  (if util/*non-reactive*\n    ;; Non-reactive component needs just the render fn and argv\n    (functional-do-render compiler jsprops)\n    (let [argv (.-argv jsprops)\n          tag (.-reagentRender jsprops)\n\n          ;; Use counter to trigger render manually.\n          [_ update-count] (react/useState 0)\n\n          ;; This object mimics React Class attributes and methods.\n          ;; To support form-2 components, even the render fn needs to\n          ;; be stored as it is created during the first render,\n          ;; and subsequent renders need to retrieve the created fn.\n          state-ref (react/useRef)\n\n          _ (when-not (.-current state-ref)\n              (let [obj #js {}]\n                (set! (.-forceUpdate obj) (fn [] (update-count inc)))\n                (set! (.-cljsMountOrder obj) (batch/next-mount-count))\n                ;; Use reagentRender name, as that is also used\n                ;; by class components, and some checks.\n                ;; reagentRender is replaced with form-2 inner fn,\n                ;; constructor refers to the original fn.\n                (set! (.-constructor obj) tag)\n                (set! (.-reagentRender obj) tag)\n\n                (set! (.-current state-ref) obj)))\n\n          reagent-state (.-current state-ref)\n\n          ;; FIXME: Access cljsRatom using interop forms\n          rat ^ratom/Reaction (gobj/get reagent-state \"cljsRatom\")]\n\n      (react/useEffect\n        (fn mount []\n          (fn unmount []\n            (some-> (gobj/get reagent-state \"cljsRatom\") ratom/dispose!)))\n        ;; Ignore props - only run effect once on mount and unmount\n        #js [])\n\n      ;; Argv is also stored in the state,\n      ;; so reaction fn will always see the latest value.\n      (set! (.-argv reagent-state) argv)\n\n      (batch/mark-rendered reagent-state)\n\n      ;; static-fns :render\n      (if (nil? rat)\n        (ratom/run-in-reaction\n          ;; Mock Class component API\n          #(functional-do-render compiler reagent-state)\n          reagent-state\n          \"cljsRatom\"\n          batch/queue-render\n          rat-opts)\n        ;; TODO: Consider passing props here, instead of keeping them in state?\n        (._run rat false)))))\n\n(defn functional-render-memo-fn\n  [prev-props next-props]\n  (let [old-argv (.-argv prev-props)\n        new-argv (.-argv next-props)]\n    (and (false? util/*always-update*)\n         (try\n           (= old-argv new-argv)\n           (catch :default e\n             (warn \"Exception thrown while comparing argv's in shouldComponentUpdate: \" old-argv \" \" new-argv \" \" e)\n             false)))))\n\n(defn functional-render-fn\n  \"Create copy of functional-render with displayName set to name of the\n  original Reagent component.\"\n  [compiler tag]\n  ;; TODO: Could be disabled for optimized builds?\n  ;; Or not currently - the memo wrap is required.\n  (or (cached-react-class compiler tag)\n      (let [f (fn [jsprops] (functional-render compiler jsprops))\n            _ (set! (.-displayName f) (util/fun-name tag))\n            f (react/memo f functional-render-memo-fn)]\n        (cache-react-class compiler tag f)\n        f)))\n","~:reader-features",["^N",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["reagent.impl.component/extract-props","v","p","cljs.core.nth","cljs.core/map?","reagent.impl.component/extract-children","first-child","cljs.core/count","cljs.core.subvec","reagent.impl.component/props-argv","c","temp__5737__auto__","a","reagent.impl.util/shallow-obj-to-map","reagent.impl.component/get-argv","reagent.impl.component/get-props","reagent.impl.component/get-children","js/module$node_modules$react$index.Children.toArray","cljs.core.into","reagent.impl.component/reagent-class?","cljs.core/fn?","G__77267","reagent.impl.component/react-class?","G__77284","reagent.impl.component/reagent-component?","reagent.impl.component/state-atom","this","sa","reagent.ratom.atom","reagent.impl.component/wrap-render","compiler","f","_","cljs.core/ifn?","js/Error","cljs.core.pr_str","res","n","G__77316","cljs.core.into_array","cljs.core/vector?","reagent.impl.protocols/as-element","args","cljs.core.apply","cljs.core/vector","reagent.impl.component/component-name","or__4126__auto__","G__77320","G__77321","reagent.impl.component/comp-name","reagent.impl.component/*current-component*","cljs.core/empty?","reagent.impl.component/do-render","*current-component*-orig-val__77322","*current-component*-temp-val__77323","ok","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","reagent.impl.component/rat-opts","reagent.impl.component/custom-wrapper","key","G__77330","cljs.core/Keyword","props","state","cljs.core/reset!","oldprops","oldstate","nextprops","nextstate","reagent.impl.util/*always-update*","old-argv","new-argv","noargv","e77332","cljs.core.not_EQ_","e","snapshot","G__77333","goog.object/get","reagent.ratom/dispose!","reagent.impl.batching/mark-rendered","error","info","reagent.impl.component/get-wrapper","wrap","and__4115__auto__","reagent.impl.component/obligatory","reagent.impl.component/dash-to-method-name","reagent.impl.util/memoize-1","reagent.impl.util/dash-to-method-name","reagent.impl.component/camelify-map-keys","fun-map","cljs.core/reduce-kv","m","k","cljs.core.assoc","cljs.core.keyword","reagent.impl.component/add-obligatory","cljs.core.merge","reagent.impl.component/wrap-funs","fmap","renders","cljs.core/select-keys","render-fun","cljs.core/vals","cljs.core/first","cljs.core/not","legacy-render","name","reagent.impl.util/fun-name","cljs.core.gensym","reagent.impl.util/*non-reactive*","rat","reagent.ratom/run-in-reaction","reagent.impl.batching/queue-render","reagent.impl.component/map-to-js","o","G__77370","goog.object/set","cljs.core/name","reagent.impl.component/cljsify","body","reagent.impl.component/built-in-static-method-names","reagent.impl.component/create-class","methods","cljs.core/dissoc","static-methods","display-name","get-initial-state","construct","cmp","context","updater","js/module$node_modules$react$index.Component","reagent.impl.batching/next-mount-count","goog.object/extend","writer","opt","cljs.core/-write","reagent.impl.component/cached-react-class","reagent.impl.protocols/get-id","reagent.impl.component/cache-react-class","constructor","reagent.impl.component/fn-to-class","spec","cljs.core/meta","withrender","reagent.impl.component/as-class","tag","cached-class","reagent.impl.component/reactify-component","comp","reagent.impl.component/functional-wrap-render","argv","reagent.impl.component/functional-do-render","*current-component*-orig-val__77405","*current-component*-temp-val__77406","reagent.impl.component/functional-render","jsprops","vec__77407","update-count","js/module$node_modules$react$index.useState","state-ref","js/module$node_modules$react$index.useRef","obj","cljs.core/inc","reagent-state","js/module$node_modules$react$index.useEffect","G__77410","reagent.impl.component/functional-render-memo-fn","prev-props","next-props","e77412","cljs.core._EQ_","reagent.impl.component/functional-render-fn","js/module$node_modules$react$index.memo"]],"~:used-vars",["^N",["~$reagent.impl.component/as-class","~$reagent.impl.component/get-children","~$cljs.core/keyword","~$reagent.impl.component/extract-props","~$reagent.impl.component/camelify-map-keys","~$reagent.impl.component/custom-wrapper","~$cljs.core/vector?","~$cljs.core/=","~$reagent.impl.component/map-to-js","~$cljs.core/ifn?","~$reagent.impl.batching/queue-render","~$cljs.core/-write","~$reagent.impl.component/cached-react-class","~$reagent.impl.component/reagent-component?","~$cljs.core/count","~$reagent.impl.component/dash-to-method-name","~$reagent.impl.component/functional-render-fn","~$reagent.impl.util/*non-reactive*","~$reagent.impl.protocols/get-id","~$cljs.core/not=","~$reagent.impl.component/functional-render","~$reagent.debug/has-console","~$cljs.core/pr-str","~$reagent.impl.component/comp-name","~$js/console","~$reagent.impl.component/wrap-funs","~$reagent.impl.component/extract-children","~$reagent.impl.util/shallow-obj-to-map","~$cljs.core/empty?","~$cljs.core/into","~$cljs.core/map?","~$cljs.core/reset!","~$reagent.ratom/dispose!","~$reagent.impl.component/functional-do-render","~$reagent.impl.batching/mark-rendered","~$cljs.core/fn?","~$reagent.impl.component/rat-opts","~$reagent.impl.component/component-name","~$reagent.impl.component/cache-react-class","~$reagent.impl.component/do-render","~$goog.object/set","~$reagent.debug/tracking","~$reagent.impl.component/functional-render-memo-fn","~$reagent.impl.util/*always-update*","~$reagent.impl.component/cljsify","~$js/module$node_modules$react$index.Children.toArray","~$reagent.debug/track-console","~$cljs.core/subvec","~$reagent.impl.component/create-class","~$reagent.impl.component/functional-wrap-render","~$reagent.impl.component/get-argv","~$reagent.ratom/run-in-reaction","~$reagent.impl.component/react-class?","~$reagent.impl.util/memoize-1","~$reagent.impl.util/dash-to-method-name","~$reagent.impl.component/built-in-static-method-names","~$reagent.impl.component/fn-to-class","~$reagent.impl.component/reactify-component","~$cljs.core/not","~$reagent.impl.component/reagent-class?","~$reagent.impl.component/props-argv","~$cljs.core/assoc","~$reagent.impl.component/obligatory","~$goog.object/extend","~$reagent.impl.component/*current-component*","~$js/module$node_modules$react$index.useEffect","~$reagent.impl.component/get-props","~$cljs.core/reduce-kv","~$reagent.impl.protocols/as-element","~$reagent.impl.component/get-wrapper","~$reagent.impl.component/add-obligatory","~$reagent.impl.component/wrap-render","~$js/module$node_modules$react$index.Component","~$reagent.ratom/atom","~$cljs.core/name","~$cljs.core/merge","~$js/Error","~$reagent.impl.component/state-atom","~$goog.object/get"]]],"~:cache-keys",["~#cmap",[["^1A","reagent/impl/batching.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^N",[]],"~:deps-syms",["^[","^X","^H","^U"]]],["^1A","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","~$goog.dom.HtmlElement"]]],["^1A","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","~$goog.array","~$goog.asserts"]]],["^1A","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^["]]],["^1A","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^3K","~$goog.labs.userAgent.util","^Z","~$goog.string.internal"]]],["^1A","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^3L","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3N"]]],["^1A","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^3L"]]],["^1A","reagent/impl/util.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^X","~$clojure.string","~$clojure.walk","^Z","^H"]]],["^1A","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^["]]],["^1A","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^["]]],["^1A","reagent/ratom.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^X","^U","^H","^10","~$clojure.set","^Z"]]],["^1A","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^["]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1A","shadow/js.js"],["fa1e82c50ca54c81300cceeb10716bdd3f414429","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^["]]],["^1A","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^["]]],["^1A","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^3L"]]],"~:SHADOW-TIMESTAMP",[1633159566000,1633159566000,1632553764000],["^3X","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","2d5bc5b3fb2e19279e31e634b0695b1fd96a54f3","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^3Y","~$module$node_modules$object_assign$index"]]],["^1A","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^3L","~$goog.reflect"]]],["^1A","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^3L","~$goog.html.trustedtypes","^3Q","^3R","^3S","^3T"]]],["^1A","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^["]]],["^1A","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^["]]],["^1A","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^3K","^3L","~$goog.html.SafeUrl","^3S","^3T","^3N"]]],["^1A","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^3L","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^44","^3P","~$goog.html.uncheckedconversions","^3S","^3N"]]],["^1A","reagent/impl/component.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^X","^Z","^C","^U","^10","^V","^W","^H"]]],["^1A","clojure/walk.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^X"]]],["^1A","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1A","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^3K","^3L","~$goog.dom.TagName","~$goog.dom.tags","^48","^49","~$goog.html.SafeStyleSheet","^44","^3P","^43","^3Q","^3R","~$goog.labs.userAgent.browser","^Z","^3S","^3T","^3N"]]],["^1A","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^Z"]]],["^1A","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1A","reagent/impl/protocols.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^X"]]],["^1A","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^3K","^3L","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1A","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^["]]],["^3X","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","519ffd5a4c91b67302cc9947b794966d629860cd","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^3Y"]]],["^1A","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^["]]],["^1A","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",[]]],["^1A","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^3K","^Z"]]],["^1A","clojure/string.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^X","^4C","~$goog.string.StringBuffer"]]],["^3X","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","6093d43b27c84de58b9ce55e3a930469339c9e54","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^3Y","^41"]]],["^1A","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","~$goog.dom.safe","^4:","^3S","^3N"]]],["^1A","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^["]]],["^1A","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^3N"]]],["^1A","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^["]]],["^1A","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^3K","^3L","^46","~$goog.math"]]],["^1A","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^3L","^47","^48","^49","^4?","^44","^3P","^3S","^3N"]]],["^1A","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^["]]],["^1A","cljs/core.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","~$goog.math.Long","~$goog.math.Integer","^4C","^Z","^3K","~$goog.Uri","^4I"]]],["^1A","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^3L","^43","^3S","^3T"]]],["^1A","reagent/debug.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^X"]]],["^1A","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^3K","^3L","^49","^Z","^3S","^3T","^3N"]]],["^1A","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^42"]]],["^1A","clojure/set.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^X"]]],["^1A","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^3K","^3L","^4C"]]],["^1A","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3F",["^ ","^3G",null,"^3H",["^N",[]],"^3I",["^[","^3L","^3T"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/bjtj1/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/debug.clj",1632563748000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1627797520000,"jar:file:/C:/Users/bjtj1/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1633159565000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1627785245000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64.clj",1632553764000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1627797520000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1631367825000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/externs.clj",1632553764000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1631367825000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64_vlq.clj",1632553764000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/js_deps.cljc",1632553764000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/tagged_literals.cljc",1632553764000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map.clj",1632553764000,"jar:file:/C:/Users/bjtj1/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/interop.clj",1632563748000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/env.cljc",1632553764000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1627797520000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/compiler.cljc",1632553764000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1631367825000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1627797520000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1627797520000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1627797520000,"jar:file:/C:/Users/bjtj1/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/ratom.clj",1632563748000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/analyzer.cljc",1632553764000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/util.cljc",1632553764000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/core.cljc",1632553764000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1631367825000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1627797520000,"jar:file:/C:/Users/bjtj1/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1631367825000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/impl/component.cljs","^7",1,"^8",5,"^9",1,"^:",27],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",["^ ","^G","^H","^I","^H","^J","^H","^K","^H","^L","^H"],"^M",["^N",[]],"~:shadow/js-access-properties",["^N",["useRef","Children.toArray","Component","useEffect","useState","memo"]],"^O","^P","^S",null,"^T",["^ ","^U","^U","^V","^V","~$p","^V","^W","^W","^B","^C","^X","^X","^C","^C","^Y","^Z","^[","^[","^Z","^Z","^10","^10","^11","^U","^12","^W","^13","^10","^H","^H"],"^14",["^N",["^15"]],"~:shadow/js-access-global",["^N",["Error"]],"^16",null,"~:defs",["^ ","~$get-props",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",33,"^8",7,"^9",33,"^:",16,"~:arglists",["^19",["~$quote",["^19",[["~$c"]]]]]],"^O","^37","^6","reagent/impl/component.cljs","^:",16,"~:method-params",["^19",[["~$c"]]],"~:protocol-impl",null,"~:arglists-meta",["^19",[null,null]],"^8",1,"~:variadic?",false,"^7",33,"~:ret-tag",["^N",[null,"~$any","~$clj-nil"]],"^9",33,"~:max-fixed-arity",1,"~:fn-var",true,"^5F",["^19",["^5G",["^19",[["~$c"]]]]]],"~$get-wrapper",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",223,"^8",7,"^9",223,"^:",18,"^5F",["^19",["^5G",["^19",[["~$key","~$f"]]]]]],"^O","^3:","^6","reagent/impl/component.cljs","^:",18,"^5H",["^19",[["^5R","~$f"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",223,"^5L",["^N",[null,"^5M"]],"^9",223,"^5O",2,"^5P",true,"^5F",["^19",["^5G",["^19",[["^5R","~$f"]]]]]],"~$get-argv",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",30,"^8",7,"^9",30,"^:",15,"^5F",["^19",["^5G",["^19",[["~$c"]]]]]],"^O","^2S","^6","reagent/impl/component.cljs","^:",15,"^5H",["^19",[["~$c"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",30,"^5L",["^N",["~$cljs.core/IVector","^5M"]],"^9",30,"^5O",1,"^5P",true,"^5F",["^19",["^5G",["^19",[["~$c"]]]]]],"~$wrap-render",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",68,"^8",7,"^9",68,"^:",18,"^5F",["^19",["^5G",["^19",[["~$c","~$compiler"]]]]],"~:doc","Calls the render function of the component `c`.  If result `res` evaluates to a:\n     1) Vector (form-1 component) - Treats the vector as hiccup and returns\n        a react element with a render function based on that hiccup\n     2) Function (form-2 component) - updates the render function to `res` i.e. the internal function\n        and calls wrap-render again (`recur`), until the render result doesn't evaluate to a function.\n     3) Anything else - Returns the result of evaluating `c`"],"^O","^3<","^6","reagent/impl/component.cljs","^:",18,"^5H",["^19",[["~$c","^5V"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",68,"^5L",["^N",[null,"^5M"]],"^9",68,"^5O",2,"^5P",true,"^5F",["^19",["^5G",["^19",[["~$c","^5V"]]]]],"^5W","Calls the render function of the component `c`.  If result `res` evaluates to a:\n     1) Vector (form-1 component) - Treats the vector as hiccup and returns\n        a react element with a render function based on that hiccup\n     2) Function (form-2 component) - updates the render function to `res` i.e. the internal function\n        and calls wrap-render again (`recur`), until the render result doesn't evaluate to a function.\n     3) Anything else - Returns the result of evaluating `c`"],"~$rat-opts",["^ ","^O","^2E","^6","reagent/impl/component.cljs","^7",133,"^8",1,"^9",133,"^:",14,"^5",["^ ","^6","reagent/impl/component.cljs","^7",133,"^8",6,"^9",133,"^:",14],"~:tag","~$cljs.core/IMap"],"~$obligatory",["^ ","^O","^33","^6","reagent/impl/component.cljs","^7",231,"^8",1,"^9",231,"^:",16,"^5",["^ ","^6","reagent/impl/component.cljs","^7",231,"^8",6,"^9",231,"^:",16],"^5Y","^5Z"],"~$props-argv",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",25,"^8",7,"^9",25,"^:",17,"^5F",["^19",["^5G",["^19",[["~$c","~$p"]]]]]],"^O","^31","^6","reagent/impl/component.cljs","^:",17,"^5H",["^19",[["~$c","~$p"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",25,"^5L",["^N",["^5T","^5M"]],"^9",25,"^5O",2,"^5P",true,"^5F",["^19",["^5G",["^19",[["~$c","~$p"]]]]]],"~$built-in-static-method-names",["^ ","^O","^2X","^6","reagent/impl/component.cljs","^7",291,"^8",1,"^9",291,"^:",34,"^5",["^ ","^6","reagent/impl/component.cljs","^7",291,"^8",6,"^9",291,"^:",34],"^5Y","^5T"],"~$do-render",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",115,"^8",7,"^9",115,"^:",16,"^5F",["^19",["^5G",["^19",[["~$c","^5V"]]]]]],"^O","^2H","^6","reagent/impl/component.cljs","^:",16,"^5H",["^19",[["~$c","^5V"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",115,"^9",115,"^5O",2,"^5P",true,"^5F",["^19",["^5G",["^19",[["~$c","^5V"]]]]]],"~$comp-name",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",106,"^8",7,"^9",106,"^:",16,"^5F",["^19",["^5G",["^19",[[]]]]]],"^O","^28","^6","reagent/impl/component.cljs","^:",16,"^5H",["^19",[[]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",106,"^5L","~$string","^9",106,"^5O",0,"^5P",true,"^5F",["^19",["^5G",["^19",[[]]]]]],"~$add-obligatory",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",241,"^8",7,"^9",241,"^:",21,"^5F",["^19",["^5G",["^19",[["~$fun-map"]]]]]],"^O","^3;","^6","reagent/impl/component.cljs","^:",21,"^5H",["^19",[["^66"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",241,"^5L",["^N",["^5M","^5N"]],"^9",241,"^5O",1,"^5P",true,"^5F",["^19",["^5G",["^19",[["^66"]]]]]],"~$cached-react-class",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",353,"^8",7,"^9",353,"^:",25,"^5F",["^19",["^5G",["^19",[["^5V","~$c"]]]]]],"^O","^1Y","^6","reagent/impl/component.cljs","^:",25,"^5H",["^19",[["^5V","~$c"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",353,"^5L","^5M","^9",353,"^5O",2,"^5P",true,"^5F",["^19",["^5G",["^19",[["^5V","~$c"]]]]]],"~$state-atom",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",60,"^8",7,"^9",60,"^:",17,"^5F",["^19",["^5G",["^19",[["~$this"]]]]]],"^O","^3B","^6","reagent/impl/component.cljs","^:",17,"^5H",["^19",[["^69"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",60,"^5L",["^N",[null,"^5M"]],"^9",60,"^5O",1,"^5P",true,"^5F",["^19",["^5G",["^19",[["^69"]]]]]],"~$functional-wrap-render",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",386,"^8",7,"^9",386,"^:",29,"^5F",["^19",["^5G",["^19",[["^5V","~$c"]]]]]],"^O","^2R","^6","reagent/impl/component.cljs","^:",29,"^5H",["^19",[["^5V","~$c"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",386,"^5L","^5M","^9",386,"^5O",2,"^5P",true,"^5F",["^19",["^5G",["^19",[["^5V","~$c"]]]]]],"~$reagent-component?",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",55,"^8",16,"^9",55,"^:",34,"^5Y","~$boolean","^5F",["^19",["^5G",["^19",[["~$c"]]]]]],"^O","^1Z","^6","reagent/impl/component.cljs","^:",34,"^5H",["^19",[["~$c"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",55,"^5L","^6<","^9",55,"^5O",1,"^5Y","^6<","^5P",true,"^5F",["^19",["^5G",["^19",[["~$c"]]]]]],"~$as-class",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",376,"^8",7,"^9",376,"^:",15,"^5F",["^19",["^5G",["^19",[["~$tag","^5V"]]]]]],"^O","^1M","^6","reagent/impl/component.cljs","^:",15,"^5H",["^19",[["^6>","^5V"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",376,"^5L","^5M","^9",376,"^5O",2,"^5P",true,"^5F",["^19",["^5G",["^19",[["^6>","^5V"]]]]]],"~$dash-to-method-name",["^ ","^O","^20","^6","reagent/impl/component.cljs","^7",234,"^8",1,"^9",234,"^:",25,"^5",["^ ","^6","reagent/impl/component.cljs","^7",234,"^8",6,"^9",234,"^:",25],"^5Y","~$function"],"~$reagent-class?",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",47,"^8",16,"^9",47,"^:",30,"^5Y","^6<","^5F",["^19",["^5G",["^19",[["~$c"]]]]]],"^O","^30","^6","reagent/impl/component.cljs","^:",30,"^5H",["^19",[["~$c"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",47,"^5L","^6<","^9",47,"^5O",1,"^5Y","^6<","^5P",true,"^5F",["^19",["^5G",["^19",[["~$c"]]]]]],"~$functional-render-memo-fn",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",475,"^8",7,"^9",475,"^:",32,"^5F",["^19",["^5G",["^19",[["~$prev-props","~$next-props"]]]]]],"^O","^2K","^6","reagent/impl/component.cljs","^:",32,"^5H",["^19",[["^6C","^6D"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",475,"^5L",["^N",[null,"^6<"]],"^9",475,"^5O",2,"^5P",true,"^5F",["^19",["^5G",["^19",[["^6C","^6D"]]]]]],"~$fn-to-class",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",360,"^8",7,"^9",360,"^:",18,"^5F",["^19",["^5G",["^19",[["^5V","~$f"]]]]]],"^O","^2Y","^6","reagent/impl/component.cljs","^:",18,"^5H",["^19",[["^5V","~$f"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",360,"^5L","^5M","^9",360,"^5O",2,"^5P",true,"^5F",["^19",["^5G",["^19",[["^5V","~$f"]]]]]],"~$reactify-component",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",381,"^8",7,"^9",381,"^:",25,"^5F",["^19",["^5G",["^19",[["~$comp","^5V"]]]]]],"^O","^2Z","^6","reagent/impl/component.cljs","^:",25,"^5H",["^19",[["^6G","^5V"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",381,"^5L",["^N",[null,"^5M"]],"^9",381,"^5O",2,"^5P",true,"^5F",["^19",["^5G",["^19",[["^6G","^5V"]]]]]],"~$map-to-js",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",275,"^8",7,"^9",275,"^:",16,"^5F",["^19",["^5G",["^19",[["~$m"]]]]]],"^O","^1U","^6","reagent/impl/component.cljs","^:",16,"^5H",["^19",[["~$m"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",275,"^5L",["^N",[null,"^5M"]],"^9",275,"^5O",1,"^5P",true,"^5F",["^19",["^5G",["^19",[["~$m"]]]]]],"~$component-name",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",102,"^8",7,"^9",102,"^:",21,"^5F",["^19",["^5G",["^19",[["~$c"]]]]]],"^O","^2F","^6","reagent/impl/component.cljs","^:",21,"^5H",["^19",[["~$c"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",102,"^5L",["^N",["^5M","^5N"]],"^9",102,"^5O",1,"^5P",true,"^5F",["^19",["^5G",["^19",[["~$c"]]]]]],"~$extract-children",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",19,"^8",7,"^9",19,"^:",23,"^5F",["^19",["^5G",["^19",[["~$v"]]]]]],"^O","^2;","^6","reagent/impl/component.cljs","^:",23,"^5H",["^19",[["~$v"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",19,"^5L",["^N",["^5M","^5N"]],"^9",19,"^5O",1,"^5P",true,"^5F",["^19",["^5G",["^19",[["~$v"]]]]]],"~$functional-render",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",416,"^8",7,"^9",416,"^:",24,"^5F",["^19",["^5G",["^19",[["^5V","~$jsprops"]]]]]],"^O","^25","^6","reagent/impl/component.cljs","^:",24,"^5H",["^19",[["^5V","^6L"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",416,"^5L","^5M","^9",416,"^5O",2,"^5P",true,"^5F",["^19",["^5G",["^19",[["^5V","^6L"]]]]]],"~$functional-do-render",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",402,"^8",7,"^9",402,"^:",27,"^5F",["^19",["^5G",["^19",[["^5V","~$c"]]]]]],"^O","^2B","^6","reagent/impl/component.cljs","^:",27,"^5H",["^19",[["^5V","~$c"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",402,"^9",402,"^5O",2,"^5P",true,"^5F",["^19",["^5G",["^19",[["^5V","~$c"]]]]]],"~$extract-props",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",15,"^8",7,"^9",15,"^:",20,"^5F",["^19",["^5G",["^19",[["~$v"]]]]]],"^O","^1P","^6","reagent/impl/component.cljs","^:",20,"^5H",["^19",[["~$v"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",15,"^5L",["^N",[null,"^5M","^5N"]],"^9",15,"^5O",1,"^5P",true,"^5F",["^19",["^5G",["^19",[["~$v"]]]]]],"~$*current-component*",["^ ","^5",["^ ","^6","reagent/impl/component.cljs","^7",10,"^8",20,"^9",10,"^:",39,"~:dynamic",true,"~:declared",true],"^O","^35","^6","reagent/impl/component.cljs","^:",39,"^8",1,"^6P",true,"^7",10,"^6Q",true,"^9",10,"^5Y","^5M"],"~$get-children",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",39,"^8",7,"^9",39,"^:",19,"^5F",["^19",["^5G",["^19",[["~$c"]]]]]],"^O","^1N","^6","reagent/impl/component.cljs","^:",19,"^5H",["^19",[["~$c"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",39,"^5L",["^N",[null,"~$clj","^5M","^5N"]],"^9",39,"^5O",1,"^5P",true,"^5F",["^19",["^5G",["^19",[["~$c"]]]]]],"~$camelify-map-keys",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",236,"^8",7,"^9",236,"^:",24,"^5F",["^19",["^5G",["^19",[["^66"]]]]]],"^O","^1Q","^6","reagent/impl/component.cljs","^:",24,"^5H",["^19",[["^66"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",236,"^5L",["^N",[null,"^5M"]],"^9",236,"^5O",1,"^5P",true,"^5F",["^19",["^5G",["^19",[["^66"]]]]]],"~$cljsify",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",281,"^8",7,"^9",281,"^:",14,"^5F",["^19",["^5G",["^19",[["~$body","^5V"]]]]]],"^O","^2M","^6","reagent/impl/component.cljs","^:",14,"^5H",["^19",[["^6V","^5V"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",281,"^5L",["^N",["^6S","^5M"]],"^9",281,"^5O",2,"^5P",true,"^5F",["^19",["^5G",["^19",[["^6V","^5V"]]]]]],"~$functional-render-fn",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",486,"^8",7,"^9",486,"^:",27,"^5F",["^19",["^5G",["^19",[["^5V","^6>"]]]]],"^5W","Create copy of functional-render with displayName set to name of the\n  original Reagent component."],"^O","^21","^6","reagent/impl/component.cljs","^:",27,"^5H",["^19",[["^5V","^6>"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",486,"^5L",["^N",["^5M","~$js"]],"^9",486,"^5O",2,"^5P",true,"^5F",["^19",["^5G",["^19",[["^5V","^6>"]]]]],"^5W","Create copy of functional-render with displayName set to name of the\n  original Reagent component."],"~$react-class?",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",51,"^8",16,"^9",51,"^:",28,"^5Y","^6<","^5F",["^19",["^5G",["^19",[["~$c"]]]]]],"^O","^2U","^6","reagent/impl/component.cljs","^:",28,"^5H",["^19",[["~$c"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",51,"^5L","^6<","^9",51,"^5O",1,"^5Y","^6<","^5P",true,"^5F",["^19",["^5G",["^19",[["~$c"]]]]]],"~$cache-react-class",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",356,"^8",7,"^9",356,"^:",24,"^5F",["^19",["^5G",["^19",[["^5V","~$c","~$constructor"]]]]]],"^O","^2G","^6","reagent/impl/component.cljs","^:",24,"^5H",["^19",[["^5V","~$c","^6["]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",356,"^9",356,"^5O",3,"^5P",true,"^5F",["^19",["^5G",["^19",[["^5V","~$c","^6["]]]]]],"~$custom-wrapper",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",135,"^8",7,"^9",135,"^:",21,"^5F",["^19",["^5G",["^19",[["^5R","~$f"]]]]]],"^O","^1R","^6","reagent/impl/component.cljs","^:",21,"^5H",["^19",[["^5R","~$f"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",135,"^9",135,"^5O",2,"^5P",true,"^5F",["^19",["^5G",["^19",[["^5R","~$f"]]]]]],"~$create-class",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",295,"^8",7,"^9",295,"^:",19,"^5F",["^19",["^5G",["^19",[["^6V","^5V"]]]]],"^5W","Creates JS class based on provided Clojure map.\n\n  Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n  and can be provided in snake-case or camelCase.\n  Constructor function is defined using key `:getInitialState`.\n\n  React built-in static methods or properties are automatically defined as statics."],"^O","^2Q","^6","reagent/impl/component.cljs","^:",19,"^5H",["^19",[["^6V","^5V"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",295,"^5L","^6@","^9",295,"^5O",2,"^5P",true,"^5F",["^19",["^5G",["^19",[["^6V","^5V"]]]]],"^5W","Creates JS class based on provided Clojure map.\n\n  Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n  and can be provided in snake-case or camelCase.\n  Constructor function is defined using key `:getInitialState`.\n\n  React built-in static methods or properties are automatically defined as statics."],"~$wrap-funs",["^ ","^5E",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",244,"^8",7,"^9",244,"^:",16,"^5F",["^19",["^5G",["^19",[["~$fmap","^5V"]]]]]],"^O","^2:","^6","reagent/impl/component.cljs","^:",16,"^5H",["^19",[["^73","^5V"]]],"^5I",null,"^5J",["^19",[null,null]],"^8",1,"^5K",false,"^7",244,"^5L",["^N",["^6S","^5M"]],"^9",244,"^5O",2,"^5P",true,"^5F",["^19",["^5G",["^19",[["^73","^5V"]]]]]]],"^17",["^ ","^H","^H","^X","^X","^W","^W","^12","^W"],"~:cljs.analyzer/constants",["^ ","^14",["^N",["~:cljsLegacyRender","~:else","~:childContextTypes","~:displayName","~:contextTypes","~:getDerivedStateFromProps","~:getDerivedStateFromError","~:componentWillUnmount","~:shouldComponentUpdate","~:reagentRender","~:no-cache","~:render","~:reagent-render","~:getInitialState","~:constructor","~:componentFunction","~:contextType"]],"~:order",["^76","^7?","^7=","^7<","^7@","^7>","^7D","^78","^75","^77","^79","^7E","^7:","^7;","^7B","^7C","^7A"]],"^1=",["^ ","^15",["^N",[]]],"^1>",["^ "],"^1?",["^[","^X","^Z","^C","^U","^10","^V","^W","^H"]],"^R","^P","~:ns-specs",["^ "],"~:ns-spec-vars",["^N",[]],"~:compiler-options",["^3E",[["^7I","~:static-fns"],true,["^7I","~:shadow-tweaks"],null,["^7I","~:source-map-inline"],null,["^7I","~:elide-asserts"],false,["^7I","~:optimize-constants"],null,["^7I","^1D"],null,["^7I","~:external-config"],null,["^7I","~:tooling-config"],null,["^7I","~:emit-constants"],null,["^7I","~:load-tests"],null,["^7I","~:form-size-threshold"],null,["^7I","~:data-readers"],null,["^7I","~:infer-externs"],"~:auto",["^7I","^1F"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^7I","~:fn-invoke-direct"],null,["^7I","~:source-map"],"/dev/null"]]]