["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",["~$cat","~$*","~$or","~$merge","~$keys","~$+","~$and","~$def"]],"~:name","~$cljs.spec.alpha","~:imports",null,"~:requires",["^ ","~$cljs.core","^A","~$gobj","~$goog.object","^C","^C","~$walk","~$clojure.walk","~$gen","~$cljs.spec.gen.alpha","~$c","^A","~$str","~$clojure.string","^I","^I","^E","^E","^G","^G"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$->t_cljs$spec$alpha28567",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:anonymous",true,"~:protocols",["^6",["~$cljs.spec.alpha/Spec","~$cljs.core/IMeta","~$cljs.spec.alpha/Specize","~$cljs.core/IWithMeta","~$cljs.core/ILookup"]],"~:skip-protocol-flag",["^6",["^S","^U","^V"]],"~:factory","~:positional","~:arglists",["~#list",["~$quote",["^[",[["~$argspec","~$aform","~$retspec","~$rform","~$fnspec","~$fform","~$gfn","~$specs","~$meta28568"]]]]],"~:doc","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28567.","~:file",null],"^Q",["^6",["^R","^S","^T","^U","^V"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha28567","^1;","resources/public/js/development/cljs/spec/alpha.cljs","~:method-params",["^[",[["^11","^12","^13","^14","^15","^16","^17","^18","^19"]]],"~:protocol-impl",null,"~:arglists-meta",["^[",[null,null]],"^P",true,"~:column",5,"~:variadic?",false,"^X","^Y","~:line",1343,"~:ret-tag","~$cljs.spec.alpha/t_cljs$spec$alpha28567","~:max-fixed-arity",9,"~:fn-var",true,"^Z",["^[",["^10",["^[",[["^11","^12","^13","^14","^15","^16","^17","^18","^19"]]]]],"^W",["^6",["^S","^U","^V"]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28567."],"~$form",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",181,"^1@",7,"~:end-line",181,"~:end-column",11,"^Z",["^[",["^10",["^[",[["~$spec"]]]]],"^1:","returns the spec as data"],"^=","~$cljs.spec.alpha/form","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",11,"^1=",["^[",[["^1J"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",181,"^1C","~$any","^1H",181,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J"]]]]],"^1:","returns the spec as data"],"~$nilable-impl",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1407,"^1@",19,"^1H",1407,"^1I",31,"~:skip-wiki",true,"^Z",["^[",["^10",["^[",[["^1G","~$pred","^17"]]]]],"^1:","Do not call this directly, use 'nilable'"],"^=","~$cljs.spec.alpha/nilable-impl","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",31,"^1=",["^[",[["^1G","^1O","^17"]]],"^1>",null,"^1N",true,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1407,"^1C","~$cljs.spec.alpha/t_cljs$spec$alpha28595","^1H",1407,"^1E",3,"^1F",true,"^Z",["^[",["^10",["^[",[["^1G","^1O","^17"]]]]],"^1:","Do not call this directly, use 'nilable'"],"~$*recursion-limit*",["^ ","^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",21,"^1@",16,"^1H",21,"^1I",33,"~:dynamic",true],"^=","~$cljs.spec.alpha/*recursion-limit*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",33,"^1@",1,"^1S",true,"^1B",21,"^1H",21,"~:tag","~$number","^1:","A soft limit on how many times a branching spec (or/alt/*/opt-keys/multi-spec)\n  can be recursed through during generation. After this a\n  non-recursive branch will be chosen."],"~$*coll-error-limit*",["^ ","^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",35,"^1@",16,"^1H",35,"^1I",34,"^1S",true],"^=","~$cljs.spec.alpha/*coll-error-limit*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",34,"^1@",1,"^1S",true,"^1B",35,"^1H",35,"^1U","^1V","^1:","The number of errors reported by explain in a collection spec'ed with 'every'"],"~$empty-coll",["^ ","^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",841,"^1@",16,"^1H",841,"^1I",26,"~:private",true],"^1Z",true,"^=","~$cljs.spec.alpha/empty-coll","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",26,"^1@",1,"^1B",841,"^1H",841,"^1U","~$cljs.core/IMap"],"~$explain-printer",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",235,"^1@",7,"^1H",235,"^1I",22,"^Z",["^[",["^10",["^[",[["~$ed"]]]]],"^1:","Default printer for explain-data. nil indicates a successful validation."],"^=","~$cljs.spec.alpha/explain-printer","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",22,"^1=",["^[",[["^22"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",235,"^1C","~$clj-nil","^1H",235,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["^22"]]]]],"^1:","Default printer for explain-data. nil indicates a successful validation."],"~$op-explain",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1159,"^1@",8,"^1H",1159,"^1I",18,"^1Z",true,"^Z",["^[",["^10",["^[",[["^1G","~$p","~$path","~$via","~$in","~$input"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/op-explain","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",18,"^1=",["^[",[["^1G","~$p","^26","^27","^28","^29"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1159,"^1C",["^6",["~$cljs.core/IVector","^1L","^24"]],"^1H",1159,"^1E",6,"^1F",true,"^Z",["^[",["^10",["^[",[["^1G","~$p","^26","^27","^28","^29"]]]]]],"~$Specize",["^ ","^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",131,"^1@",14,"^1H",131,"^1I",21,"~:protocol-symbol",true,"~:jsdoc",["^[",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","~$specize*",[["~$_"],["~$_","^1G"]]]]],"^2=",true,"^=","^T","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",21,"^1@",1,"^1B",131,"^2?",["^ ","^2@",["^ ","^2A",[["~$_"],["~$_","^1G"]]]],"~:info",null,"^1H",131,"^1U","^1L","~:impls",["^6",["~$cljs.spec.alpha/t_cljs$spec$alpha28592","~$cljs.spec.alpha/t_cljs$spec$alpha28293","~$cljs.spec.alpha/t_cljs$spec$alpha28302","~$cljs.core/Keyword","~$cljs.spec.alpha/t_cljs$spec$alpha28360","~$cljs.spec.alpha/t_cljs$spec$alpha28268","~$cljs.spec.alpha/t_cljs$spec$alpha28374","~$default","~$cljs.core/PersistentHashSet","^1Q","~$cljs.spec.alpha/t_cljs$spec$alpha28279","~$cljs.core/PersistentTreeSet","~$cljs.spec.alpha/t_cljs$spec$alpha28560","^1D","~$cljs.core/Symbol","~$cljs.spec.alpha/t_cljs$spec$alpha28386","~$cljs.spec.alpha/t_cljs$spec$alpha28212"]],"^2>",["^[",["@interface"]]],"~$alt-impl",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1044,"^1@",19,"^1H",1044,"^1I",27,"^1N",true,"^Z",["^[",["^10",["^[",[["~$ks","~$ps","~$forms"]]]]],"^1:","Do not call this directly, use 'alt'"],"^=","~$cljs.spec.alpha/alt-impl","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",27,"^1=",["^[",[["^2T","^2U","^2V"]]],"^1>",null,"^1N",true,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1044,"^1C",["^6",["~$clj","^1L"]],"^1H",1044,"^1E",3,"^1F",true,"^Z",["^[",["^10",["^[",[["^2T","^2U","^2V"]]]]],"^1:","Do not call this directly, use 'alt'"],"~$tagged-ret",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",656,"^1@",8,"^1H",656,"^1I",18,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$tag","~$ret"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/tagged-ret","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",18,"^1=",["^[",[["^2Z","^2["]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",656,"^1C","~$cljs.core/MapEntry","^1H",656,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^2Z","^2["]]]]]],"~$pvalid?",["^ ","^N",null,"^O",["^ ","^1Z",true,"^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1I",15,"~:top-fn",["^ ","^1A",false,"~:fixed-arity",3,"^1E",3,"^1=",["^[",[["^1O","~$x"],["^1O","~$x","^1G"]]],"^Z",["^[",[["^1O","~$x"],["^1O","~$x","^1G"]]],"^1?",["^[",[null,null]]],"^1@",8,"^1B",380,"^1H",380,"^Z",["^[",["^10",["^[",[["^1O","~$x"],["^1O","~$x","^1G"]]]]],"^1:","internal helper function that returns true when x is valid for spec."],"^1Z",true,"^=","~$cljs.spec.alpha/pvalid?","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",15,"^33",["^ ","^1A",false,"^34",3,"^1E",3,"^1=",["^[",[["^1O","~$x"],["^1O","~$x","^1G"]]],"^Z",["^[",[["^1O","~$x"],["^1O","~$x","^1G"]]],"^1?",["^[",[null,null]]],"^1=",["^[",[["^1O","~$x"],["^1O","~$x","^1G"]]],"^1>",null,"^34",3,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^2@",[["^ ","^34",2,"^1A",false,"^1U","~$boolean"],["^ ","^34",3,"^1A",false,"^1U","^36"]],"^1B",380,"^1H",380,"^1E",3,"^1F",true,"^Z",["^[",[["^1O","~$x"],["^1O","~$x","^1G"]]],"^1:","internal helper function that returns true when x is valid for spec."],"~$def-impl",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",306,"^1@",19,"^1H",306,"^1I",27,"^1N",true,"^Z",["^[",["^10",["^[",[["~$k","^1G","^1J"]]]]],"^1:","Do not call this directly, use 'def'"],"^=","~$cljs.spec.alpha/def-impl","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",27,"^1=",["^[",[["~$k","^1G","^1J"]]],"^1>",null,"^1N",true,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",306,"^1H",306,"^1E",3,"^1F",true,"^Z",["^[",["^10",["^[",[["~$k","^1G","^1J"]]]]],"^1:","Do not call this directly, use 'def'"],"~$t_cljs$spec$alpha28560",["^ ","~:num-fields",3,"^Q",["^6",["^R","^S","^T","^U"]],"^=","^2O","^1;","resources/public/js/development/cljs/spec/alpha.cljs","~:type",true,"^P",true,"^1@",3,"^1B",1294,"~:record",false,"^1U","~$function","^W",["^6",["^S","^U"]]],"~$*explain-out*",["^ ","^=","~$cljs.spec.alpha/*explain-out*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1B",262,"^1@",1,"^1H",262,"^1I",29,"^1S",true,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",262,"^1@",16,"^1H",262,"^1I",29,"^1S",true]],"~$t_cljs$spec$alpha28374",["^ ","^3:",4,"^Q",["^6",["^R","^S","^T","^U"]],"^=","^2J","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^3;",true,"^P",true,"^1@",3,"^1B",816,"^3<",false,"^1U","^3=","^W",["^6",["^S","^U"]]],"~$*runtime-asserts*",["^ ","^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1479,"^1@",3,"^1H",1479,"^1I",20,"^1Z",true,"^1S",true],"^1Z",true,"^=","~$cljs.spec.alpha/*runtime-asserts*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",20,"^1@",1,"^1S",true,"^1B",1477,"^1H",1479,"^1U","^36"],"~$regex-spec-impl",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1291,"^1@",19,"^1H",1291,"^1I",34,"^1N",true,"^Z",["^[",["^10",["^[",[["~$re","^17"]]]]],"^1:","Do not call this directly, use 'spec' with a regex op argument"],"^=","~$cljs.spec.alpha/regex-spec-impl","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",34,"^1=",["^[",[["^3D","^17"]]],"^1>",null,"^1N",true,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1291,"^1C","^2O","^1H",1291,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^3D","^17"]]]]],"^1:","Do not call this directly, use 'spec' with a regex op argument"],"~$merge-spec-impl",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",813,"^1@",19,"^1H",813,"^1I",34,"^1N",true,"^Z",["^[",["^10",["^[",[["^2V","~$preds","^17"]]]]],"^1:","Do not call this directly, use 'merge'"],"^=","~$cljs.spec.alpha/merge-spec-impl","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",34,"^1=",["^[",[["^2V","^3G","^17"]]],"^1>",null,"^1N",true,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",813,"^1C","^2J","^1H",813,"^1E",3,"^1F",true,"^Z",["^[",["^10",["^[",[["^2V","^3G","^17"]]]]],"^1:","Do not call this directly, use 'merge'"],"~$->t_cljs$spec$alpha28595",["^ ","^N",null,"^O",["^ ","^P",true,"^Q",["^6",["^R","^S","^T","^U"]],"^W",["^6",["^S","^U"]],"^X","^Y","^Z",["^[",["^10",["^[",[["^1G","^1O","^17","^1J","~$meta28596"]]]]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28595.","^1;",null],"^Q",["^6",["^R","^S","^T","^U"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha28595","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1=",["^[",[["^1G","^1O","^17","^1J","^3J"]]],"^1>",null,"^1?",["^[",[null,null]],"^P",true,"^1@",5,"^1A",false,"^X","^Y","^1B",1411,"^1C","^1Q","^1E",5,"^1F",true,"^Z",["^[",["^10",["^[",[["^1G","^1O","^17","^1J","^3J"]]]]],"^W",["^6",["^S","^U"]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28595."],"~$explain-data*",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",219,"^1@",7,"^1H",219,"^1I",20,"^Z",["^[",["^10",["^[",[["^1J","^26","^27","^28","~$x"]]]]]],"^=","~$cljs.spec.alpha/explain-data*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",20,"^1=",["^[",[["^1J","^26","^27","^28","~$x"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",219,"^1C",["^6",["^20","^24"]],"^1H",219,"^1E",5,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J","^26","^27","^28","~$x"]]]]]],"~$add-ret",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1110,"^1@",8,"^1H",1110,"^1I",15,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$p","~$r","~$k"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/add-ret","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",15,"^1=",["^[",[["~$p","~$r","~$k"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1110,"^1C",["^6",[null,"^2X","^1L"]],"^1H",1110,"^1E",3,"^1F",true,"^Z",["^[",["^10",["^[",[["~$p","~$r","~$k"]]]]]],"~$explain-pred-list",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",738,"^1@",8,"^1H",738,"^1I",25,"^1Z",true,"^Z",["^[",["^10",["^[",[["^2V","^3G","^26","^27","^28","~$x"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/explain-pred-list","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",25,"^1=",["^[",[["^2V","^3G","^26","^27","^28","~$x"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",738,"^1C",["^6",["^2;","^1L","^24"]],"^1H",738,"^1E",6,"^1F",true,"^Z",["^[",["^10",["^[",[["^2V","^3G","^26","^27","^28","~$x"]]]]]],"~$MAX_INT",["^ ","^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",19,"^1@",14,"^1H",19,"^1I",21,"~:const",true],"^=","~$cljs.spec.alpha/MAX_INT","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",21,"~:const-expr",["^ ","~:op","^3S","~:val",9007199254740991,"~:env",["^ ","~:context","~:expr"],"~:form",9007199254740991,"^1U","^1V"],"^1@",1,"^3S",true,"^1B",19,"^1H",19,"^1U","^1V"],"~$check-asserts",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1487,"^1@",7,"^1H",1487,"^1I",20,"^Z",["^[",["^10",["^[",[["~$flag"]]]]],"^1:","Enable or disable spec asserts that have been compiled\nwith '*compile-asserts*' true.  See 'assert'.\nInitially set to boolean value of cljs.spec.alpha/*runtime-asserts*.\nDefaults to false."],"^=","~$cljs.spec.alpha/check-asserts","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",20,"^1=",["^[",[["^41"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1487,"^1H",1487,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["^41"]]]]],"^1:","Enable or disable spec asserts that have been compiled\nwith '*compile-asserts*' true.  See 'assert'.\nInitially set to boolean value of cljs.spec.alpha/*runtime-asserts*.\nDefaults to false."],"~$alt2",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1042,"^1@",8,"^1H",1042,"^1I",12,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$p1","~$p2"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/alt2","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",12,"^1=",["^[",[["^44","^45"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1042,"^1C",["^6",[null,"^1L","^20","^24"]],"^1H",1042,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^44","^45"]]]]]],"~$and-k-gen",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",417,"^1@",8,"^1H",417,"^1I",17,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$s"]]]]],"^1:","returns a tuple generator made up of generators for every element\n  in s."],"^1Z",true,"^=","~$cljs.spec.alpha/and-k-gen","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",17,"^1=",["^[",[["~$s"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",417,"^1C","^1L","^1H",417,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["~$s"]]]]],"^1:","returns a tuple generator made up of generators for every element\n  in s."],"~$t_cljs$spec$alpha28386",["^ ","^3:",25,"^Q",["^6",["^R","^S","^T","^U"]],"^=","^2Q","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^3;",true,"^P",true,"^1@",6,"^1B",881,"^3<",false,"^1U","^3=","^W",["^6",["^S","^U"]]],"~$assert*",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1495,"^1@",7,"^1H",1495,"^1I",14,"^Z",["^[",["^10",["^[",[["^1J","~$x"]]]]],"^1:","Do not call this directly, use 'assert'."],"^=","~$cljs.spec.alpha/assert*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",14,"^1=",["^[",[["^1J","~$x"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1495,"^1H",1495,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J","~$x"]]]]],"^1:","Do not call this directly, use 'assert'."],"~$fn-sym",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",123,"^1@",8,"^1H",123,"^1I",14,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$f-n"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/fn-sym","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",14,"^1=",["^[",[["^4="]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",123,"^1C",["^6",["^1L","^2P","^24"]],"^1H",123,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["^4="]]]]]],"~$inst-in-range?",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1442,"^1@",7,"^1H",1442,"^1I",21,"^Z",["^[",["^10",["^[",[["~$start","~$end","~$inst"]]]]],"^1:","Return true if inst at or after start and before end"],"^=","~$cljs.spec.alpha/inst-in-range?","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",21,"^1=",["^[",[["^4@","^4A","^4B"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1442,"^1C","^36","^1H",1442,"^1E",3,"^1F",true,"^Z",["^[",["^10",["^[",[["^4@","^4A","^4B"]]]]],"^1:","Return true if inst at or after start and before end"],"~$registry-ref",["^ ","^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",47,"^1@",20,"^1H",47,"^1I",32,"^1Z",true],"^1Z",true,"^=","~$cljs.spec.alpha/registry-ref","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",32,"^1@",1,"^1B",47,"^1H",47,"^1U","~$cljs.core/Atom"],"~$accept?",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",979,"^1@",8,"^1H",979,"^1I",15,"^1Z",true,"^Z",["^[",["^10",["^[",[[["^ ","~:keys",["~:cljs.spec.alpha/op"]]]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/accept?","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",15,"^1=",["^[",[["~$p__28435"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",979,"^1C","^36","^1H",979,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[[["^ ","^4H",["^4I"]]]]]]]],"~$and-spec-impl",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",749,"^1@",19,"^1H",749,"^1I",32,"^1N",true,"^Z",["^[",["^10",["^[",[["^2V","^3G","^17"]]]]],"^1:","Do not call this directly, use 'and'"],"^=","~$cljs.spec.alpha/and-spec-impl","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",32,"^1=",["^[",[["^2V","^3G","^17"]]],"^1>",null,"^1N",true,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",749,"^1C","^2H","^1H",749,"^1E",3,"^1F",true,"^Z",["^[",["^10",["^[",[["^2V","^3G","^17"]]]]],"^1:","Do not call this directly, use 'and'"],"~$accept",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",977,"^1@",8,"^1H",977,"^1I",14,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$x"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/accept","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",14,"^1=",["^[",[["~$x"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",977,"^1C","^20","^1H",977,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["~$x"]]]]]],"~$recur-limit?",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",351,"^1@",8,"^1H",351,"^1I",20,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$rmap","~$id","^26","~$k"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/recur-limit?","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",20,"^1=",["^[",[["^4Q","^4R","^26","~$k"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",351,"^1C","^36","^1H",351,"^1E",4,"^1F",true,"^Z",["^[",["^10",["^[",[["^4Q","^4R","^26","~$k"]]]]]],"~$describe*",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",45,"^1@",4,"^1H",45,"^1I",13,"~:protocol","^R","^1:",null,"^Z",["^[",["^10",["^[",[["^1J"]]]]]],"^4U","^R","^=","~$cljs.spec.alpha/describe*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",13,"^1=",["^[",[["^1J"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",39,"^1C","^1L","^1H",45,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J"]]]]],"^1:",null],"~$t_cljs$spec$alpha28592",["^ ","^3:",2,"^Q",["^6",["^R","^S","^T","^U"]],"^=","^2D","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^3;",true,"^P",true,"^1@",5,"^1B",1391,"^3<",false,"^1U","^3=","^W",["^6",["^S","^U"]]],"~$map-spec-impl",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",423,"^1@",19,"^1H",423,"^1I",32,"^1N",true,"^Z",["^[",["^10",["^[",[[["^ ","^4H",["~$req-un","~$opt-un","~$keys-pred","~$pred-exprs","~$opt-keys","~$req-specs","~$req","~$req-keys","~$opt-specs","~$pred-forms","~$opt","^17"],"~:as","~$argm"]]]]]],"^1:","Do not call this directly, use 'spec' with a map argument"],"^=","~$cljs.spec.alpha/map-spec-impl","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",32,"^1=",["^[",[["~$p__28209"]]],"^1>",null,"^1N",true,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",423,"^1C","^2R","^1H",423,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[[["^ ","^4H",["^4Y","^4Z","^4[","^50","^51","^52","^53","^54","^55","^56","^57","^17"],"^58","^59"]]]]]],"^1:","Do not call this directly, use 'spec' with a map argument"],"~$reg-resolve!",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",66,"^1@",8,"^1H",66,"^1I",20,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$k"]]]]],"^1:","returns the spec/regex at end of alias chain starting with k, throws if not found, k if k not ident"],"^1Z",true,"^=","~$cljs.spec.alpha/reg-resolve!","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",20,"^1=",["^[",[["~$k"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",66,"^1C",["^6",[null,"^1L"]],"^1H",66,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["~$k"]]]]],"^1:","returns the spec/regex at end of alias chain starting with k, throws if not found, k if k not ident"],"~$re-explain",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1265,"^1@",8,"^1H",1265,"^1I",18,"^1Z",true,"^Z",["^[",["^10",["^[",[["^26","^27","^28","^3D","^29"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/re-explain","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",18,"^1=",["^[",[["^26","^27","^28","^3D","^29"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1265,"^1C",["^6",["^2;","^1L","^24"]],"^1H",1265,"^1E",5,"^1F",true,"^Z",["^[",["^10",["^[",[["^26","^27","^28","^3D","^29"]]]]]],"~$alts",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1041,"^1@",8,"^1H",1041,"^1I",12,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$&","^2U"]]]]],"^33",["^ ","^1A",true,"^34",0,"^1E",0,"^1=",[["^[",["^2U"]]],"^Z",["^[",[["~$&","^2U"]]],"^1?",["^[",[null]]]],"^1Z",true,"^=","~$cljs.spec.alpha/alts","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",12,"^33",["^ ","^1A",true,"^34",0,"^1E",0,"^1=",[["^[",["^2U"]]],"^Z",["^[",[["~$&","^2U"]]],"^1?",["^[",[null]]],"^1=",[["^[",["^2U"]]],"^1>",null,"^34",0,"^1?",["^[",[null]],"^1@",1,"^1A",true,"^2@",[["^ ","^34",0,"^1A",true,"^1U",["^6",["^1L","^20","^24"]]]],"^1B",1041,"^1C","^1L","^1H",1041,"^1E",0,"^1F",true,"^Z",["^[",[["~$&","^2U"]]]],"~$->t_cljs$spec$alpha28386",["^ ","^N",null,"^O",["^ ","^P",true,"^Q",["^6",["^R","^S","^T","^U"]],"^W",["^6",["^S","^U"]],"^X","^Y","^Z",["^[",["^10",["^[",[["^1G","~$max-count","~$map__28384","~$check?","^17","~$gen-max","^1O","~$cpred","~$conform-keys","~$kind-form","~$addcv","~$cfns","~$describe-form","~$distinct","^1J","~$kfn","~$gen-into","~$p__28383","~$count","~$min-count","~$opts","~$kind","~$conform-all","~$conform-into","~$meta28387"]]]]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28386.","^1;",null],"^Q",["^6",["^R","^S","^T","^U"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha28386","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1=",["^[",[["^1G","^5C","^5D","^5E","^17","^5F","^1O","^5G","^5H","^5I","^5J","^5K","^5L","^5M","^1J","^5N","^5O","^5P","^5Q","^5R","^5S","^5T","^5U","^5V","^5W"]]],"^1>",null,"^1?",["^[",[null,null]],"^P",true,"^1@",6,"^1A",false,"^X","^Y","^1B",881,"^1C","^2Q","^1E",25,"^1F",true,"^Z",["^[",["^10",["^[",[["^1G","^5C","^5D","^5E","^17","^5F","^1O","^5G","^5H","^5I","^5J","^5K","^5L","^5M","^1J","^5N","^5O","^5P","^5Q","^5R","^5S","^5T","^5U","^5V","^5W"]]]]],"^W",["^6",["^S","^U"]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28386."],"~$with-name",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",85,"^1@",8,"^1H",85,"^1I",17,"^1Z",true,"^Z",["^[",["^10",["^[",[["^1J","~$name"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/with-name","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",17,"^1=",["^[",[["^1J","^5Z"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",85,"^1C",["^6",["^2X","^1L","^2G","^2P","~$cljs.core/MetaFn","^24"]],"^1H",85,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J","^5Z"]]]]]],"~$explain",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",270,"^1@",7,"^1H",270,"^1I",14,"^Z",["^[",["^10",["^[",[["^1J","~$x"]]]]],"^1:","Given a spec and a value that fails to conform, prints an explanation to *out*."],"^=","~$cljs.spec.alpha/explain","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",14,"^1=",["^[",[["^1J","~$x"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",270,"^1C","^1L","^1H",270,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J","~$x"]]]]],"^1:","Given a spec and a value that fails to conform, prints an explanation to *out*."],"~$spec-name",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",93,"^1@",8,"^1H",93,"^1I",17,"^1Z",true,"^Z",["^[",["^10",["^[",[["^1J"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/spec-name","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",17,"^1=",["^[",[["^1J"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",93,"^1C",["^6",["^1L","^2G","^2P","^24"]],"^1H",93,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J"]]]]]],"~$map-spec",["^ ","^=","~$cljs.spec.alpha/map-spec","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1B",335,"^1@",1,"^1H",335,"^1I",18,"~:declared",true,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",335,"^1@",10,"^1H",335,"^1I",18,"^67",true]],"~$with-gen*",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",44,"^1@",4,"^1H",44,"^1I",13,"^4U","^R","^1:",null,"^Z",["^[",["^10",["^[",[["^1J","^17"]]]]]],"^4U","^R","^=","~$cljs.spec.alpha/with-gen*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",13,"^1=",["^[",[["^1J","^17"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",39,"^1C","^1L","^1H",44,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J","^17"]]]]],"^1:",null],"~$k-gen",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",397,"^1@",8,"^1H",397,"^1I",13,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$f"]]]]],"^1:","returns a generator for form f, which can be a keyword or a list\n  starting with 'or or 'and."],"^1Z",true,"^=","~$cljs.spec.alpha/k-gen","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",13,"^1=",["^[",[["~$f"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",397,"^1C",["^6",["^1L","^24"]],"^1H",397,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["~$f"]]]]],"^1:","returns a generator for form f, which can be a keyword or a list\n  starting with 'or or 'and."],"~$or-spec-impl",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",659,"^1@",19,"^1H",659,"^1I",31,"^1N",true,"^Z",["^[",["^10",["^[",[["^:","^2V","^3G","^17"]]]]],"^1:","Do not call this directly, use 'or'"],"^=","~$cljs.spec.alpha/or-spec-impl","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",31,"^1=",["^[",[["^:","^2V","^3G","^17"]]],"^1>",null,"^1N",true,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",659,"^1C","^2F","^1H",659,"^1E",4,"^1F",true,"^Z",["^[",["^10",["^[",[["^:","^2V","^3G","^17"]]]]],"^1:","Do not call this directly, use 'or'"],"~$->t_cljs$spec$alpha28302",["^ ","^N",null,"^O",["^ ","^P",true,"^Q",["^6",["^R","^S","^T","^U"]],"^W",["^6",["^S","^U"]],"^X","^Y","^Z",["^[",["^10",["^[",[["^:","^2V","^3G","^17","^4R","~$kps","^18","~$cform","~$meta28303"]]]]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28302.","^1;",null],"^Q",["^6",["^R","^S","^T","^U"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha28302","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1=",["^[",[["^:","^2V","^3G","^17","^4R","^6?","^18","^6@","^6A"]]],"^1>",null,"^1?",["^[",[null,null]],"^P",true,"^1@",5,"^1A",false,"^X","^Y","^1B",697,"^1C","^2F","^1E",9,"^1F",true,"^Z",["^[",["^10",["^[",[["^:","^2V","^3G","^17","^4R","^6?","^18","^6@","^6A"]]]]],"^W",["^6",["^S","^U"]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28302."],"~$specize",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",159,"^1@",8,"^1H",159,"^1I",15,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$s"],["~$s","^1G"]]]]],"^33",["^ ","^1A",false,"^34",2,"^1E",2,"^1=",["^[",[["~$s"],["~$s","^1G"]]],"^Z",["^[",[["~$s"],["~$s","^1G"]]],"^1?",["^[",[null,null]]]],"^1Z",true,"^=","~$cljs.spec.alpha/specize","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",15,"^33",["^ ","^1A",false,"^34",2,"^1E",2,"^1=",["^[",[["~$s"],["~$s","^1G"]]],"^Z",["^[",[["~$s"],["~$s","^1G"]]],"^1?",["^[",[null,null]]],"^1=",["^[",[["~$s"],["~$s","^1G"]]],"^1>",null,"^34",2,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^2@",[["^ ","^34",1,"^1A",false,"^1U",["^6",[null,"^1L","^24"]]],["^ ","^34",2,"^1A",false,"^1U",["^6",[null,"^1L","^24"]]]],"^1B",159,"^1H",159,"^1E",2,"^1F",true,"^Z",["^[",[["~$s"],["~$s","^1G"]]]],"~$*fspec-iterations*",["^ ","^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",27,"^1@",16,"^1H",27,"^1I",34,"^1S",true],"^=","~$cljs.spec.alpha/*fspec-iterations*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",34,"^1@",1,"^1S",true,"^1B",27,"^1H",27,"^1U","^1V","^1:","The number of times an anonymous fn specified by fspec will be (generatively) tested during conform"],"~$Spec",["^ ","^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",39,"^1@",14,"^1H",39,"^1I",18,"^2=",true,"^2>",["^[",["@interface"]],"^2?",["^ ","^2@",["^ ","~$conform*",[["^1J","~$x"]],"~$unform*",[["^1J","~$y"]],"~$explain*",[["^1J","^26","^27","^28","~$x"]],"~$gen*",[["^1J","~$overrides","^26","^4Q"]],"^68",[["^1J","^17"]],"^4T",[["^1J"]]]]],"^2=",true,"^=","^R","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",18,"^1@",1,"^1B",39,"^2?",["^ ","^2@",["^ ","^6H",[["^1J","~$x"]],"^6I",[["^1J","~$y"]],"^6J",[["^1J","^26","^27","^28","~$x"]],"^6K",[["^1J","^6L","^26","^4Q"]],"^68",[["^1J","^17"]],"^4T",[["^1J"]]]],"^2B",null,"^1H",39,"^1U","^1L","^2C",["^6",["^2D","^2E","^2F","^2H","^2I","^2J","^1Q","^2M","^2O","^1D","^2Q","^2R"]],"^2>",["^[",["@interface"]]],"~$unform",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",174,"^1@",7,"^1H",174,"^1I",13,"^Z",["^[",["^10",["^[",[["^1J","~$x"]]]]],"^1:","Given a spec and a value created by or compliant with a call to\n  'conform' with the same spec, returns a value with all conform\n   destructuring undone."],"^=","~$cljs.spec.alpha/unform","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",13,"^1=",["^[",[["^1J","~$x"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",174,"^1C","^1L","^1H",174,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J","~$x"]]]]],"^1:","Given a spec and a value created by or compliant with a call to\n  'conform' with the same spec, returns a value with all conform\n   destructuring undone."],"~$valid?",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",371,"^1@",7,"^1H",371,"^1I",13,"^Z",["^[",["^10",["^[",[["^1J","~$x"],["^1J","~$x","^1G"]]]]],"^1:","Helper function that returns true when x is valid for spec.","^33",["^ ","^1A",false,"^34",3,"^1E",3,"^1=",["^[",[["^1J","~$x"],["^1J","~$x","^1G"]]],"^Z",["^[",[["^1J","~$x"],["^1J","~$x","^1G"]]],"^1?",["^[",[null,null]]]],"^=","~$cljs.spec.alpha/valid?","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",13,"^33",["^ ","^1A",false,"^34",3,"^1E",3,"^1=",["^[",[["^1J","~$x"],["^1J","~$x","^1G"]]],"^Z",["^[",[["^1J","~$x"],["^1J","~$x","^1G"]]],"^1?",["^[",[null,null]]],"^1=",["^[",[["^1J","~$x"],["^1J","~$x","^1G"]]],"^1>",null,"^34",3,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^2@",[["^ ","^34",2,"^1A",false,"^1U","^36"],["^ ","^34",3,"^1A",false,"^1U","^36"]],"^1B",371,"^1H",371,"^1E",3,"^1F",true,"^Z",["^[",[["^1J","~$x"],["^1J","~$x","^1G"]]],"^1:","Helper function that returns true when x is valid for spec."],"^F",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",293,"^1@",7,"^1H",293,"^1I",10,"^Z",["^[",["^10",["^[",[["^1J"],["^1J","^6L"]]]]],"^1:","Given a spec, returns the generator for it, or throws if none can\n  be constructed. Optionally an overrides map can be provided which\n  should map spec names or paths (vectors of keywords) to no-arg\n  generator-creating fns. These will be used instead of the generators at those\n  names/paths. Note that parent generator (in the spec or overrides\n  map) will supersede those of any subtrees. A generator for a regex\n  op must always return a sequential collection (i.e. a generator for\n  s/? should return either an empty sequence/vector or a\n  sequence/vector with one item in it)","^33",["^ ","^1A",false,"^34",2,"^1E",2,"^1=",["^[",[["^1J"],["^1J","^6L"]]],"^Z",["^[",[["^1J"],["^1J","^6L"]]],"^1?",["^[",[null,null]]]],"^=","~$cljs.spec.alpha/gen","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",10,"^33",["^ ","^1A",false,"^34",2,"^1E",2,"^1=",["^[",[["^1J"],["^1J","^6L"]]],"^Z",["^[",[["^1J"],["^1J","^6L"]]],"^1?",["^[",[null,null]]],"^1=",["^[",[["^1J"],["^1J","^6L"]]],"^1>",null,"^34",2,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^2@",[["^ ","^34",1,"^1A",false,"^1U","^1L"],["^ ","^34",2,"^1A",false,"^1U","^1L"]],"^1B",293,"^1H",293,"^1E",2,"^1F",true,"^Z",["^[",[["^1J"],["^1J","^6L"]]],"^1:","Given a spec, returns the generator for it, or throws if none can\n  be constructed. Optionally an overrides map can be provided which\n  should map spec names or paths (vectors of keywords) to no-arg\n  generator-creating fns. These will be used instead of the generators at those\n  names/paths. Note that parent generator (in the spec or overrides\n  map) will supersede those of any subtrees. A generator for a regex\n  op must always return a sequential collection (i.e. a generator for\n  s/? should return either an empty sequence/vector or a\n  sequence/vector with one item in it)"],"~$nonconforming",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1386,"^1@",7,"^1H",1386,"^1I",20,"^Z",["^[",["^10",["^[",[["^1J"]]]]],"^1:","takes a spec and returns a spec that has the same properties except\n  'conform' returns the original (not the conformed) value. Note, will specize regex ops."],"^=","~$cljs.spec.alpha/nonconforming","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",20,"^1=",["^[",[["^1J"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1386,"^1C","^2D","^1H",1386,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J"]]]]],"^1:","takes a spec and returns a spec that has the same properties except\n  'conform' returns the original (not the conformed) value. Note, will specize regex ops."],"^6I",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",41,"^1@",4,"^1H",41,"^1I",11,"^4U","^R","^1:",null,"^Z",["^[",["^10",["^[",[["^1J","~$y"]]]]]],"^4U","^R","^=","~$cljs.spec.alpha/unform*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",11,"^1=",["^[",[["^1J","~$y"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",39,"^1C","^1L","^1H",41,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J","~$y"]]]]],"^1:",null],"~$->sym",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",323,"^1@",8,"^1H",323,"^1I",13,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$x"]]]]],"^1:","Returns a symbol from a symbol or var"],"^1Z",true,"^=","~$cljs.spec.alpha/->sym","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",13,"^1=",["^[",[["~$x"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",323,"^1C",["^6",[null,"^1L"]],"^1H",323,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["~$x"]]]]],"^1:","Returns a symbol from a symbol or var"],"~$abbrev",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",187,"^1@",7,"^1H",187,"^1I",13,"^Z",["^[",["^10",["^[",[["^1G"]]]]]],"^=","~$cljs.spec.alpha/abbrev","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",13,"^1=",["^[",[["^1G"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",187,"^1C",["^6",[null,"^1L","^2P"]],"^1H",187,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["^1G"]]]]]],"~$->t_cljs$spec$alpha28374",["^ ","^N",null,"^O",["^ ","^P",true,"^Q",["^6",["^R","^S","^T","^U"]],"^W",["^6",["^S","^U"]],"^X","^Y","^Z",["^[",["^10",["^[",[["^2V","^3G","^17","~$meta28375"]]]]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28374.","^1;",null],"^Q",["^6",["^R","^S","^T","^U"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha28374","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1=",["^[",[["^2V","^3G","^17","^6Z"]]],"^1>",null,"^1?",["^[",[null,null]],"^P",true,"^1@",3,"^1A",false,"^X","^Y","^1B",816,"^1C","^2J","^1E",4,"^1F",true,"^Z",["^[",["^10",["^[",[["^2V","^3G","^17","^6Z"]]]]],"^W",["^6",["^S","^U"]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28374."],"~$regex?",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",80,"^1@",7,"^1H",80,"^1I",13,"^Z",["^[",["^10",["^[",[["~$x"]]]]],"^1:","returns x if x is a (cljs.spec.alpha) regex op, else logical false"],"^=","~$cljs.spec.alpha/regex?","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",13,"^1=",["^[",[["~$x"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",80,"^1C",["^6",[null,"^1L"]],"^1H",80,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["~$x"]]]]],"^1:","returns x if x is a (cljs.spec.alpha) regex op, else logical false"],"~$or-k-gen",["^ ","^N",null,"^O",["^ ","^1Z",true,"^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1I",16,"^33",["^ ","^1A",false,"^34",2,"^1E",2,"^1=",["^[",[["~$s"],["^5R","~$s"]]],"^Z",["^[",[["~$s"],["^5R","~$s"]]],"^1?",["^[",[null,null]]],"^1@",8,"^1B",406,"^1H",406,"^Z",["^[",["^10",["^[",[["~$s"],["^5R","~$s"]]]]],"^1:","returns a tuple generator made up of generators for a random subset\n  of min-count (default 0) to all elements in s."],"^1Z",true,"^=","~$cljs.spec.alpha/or-k-gen","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",16,"^33",["^ ","^1A",false,"^34",2,"^1E",2,"^1=",["^[",[["~$s"],["^5R","~$s"]]],"^Z",["^[",[["~$s"],["^5R","~$s"]]],"^1?",["^[",[null,null]]],"^1=",["^[",[["~$s"],["^5R","~$s"]]],"^1>",null,"^34",2,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^2@",[["^ ","^34",1,"^1A",false,"^1U","^1L"],["^ ","^34",2,"^1A",false,"^1U","^1L"]],"^1B",406,"^1H",406,"^1E",2,"^1F",true,"^Z",["^[",[["~$s"],["^5R","~$s"]]],"^1:","returns a tuple generator made up of generators for a random subset\n  of min-count (default 0) to all elements in s."],"~$int-in-range?",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1449,"^1@",7,"^1H",1449,"^1I",20,"^Z",["^[",["^10",["^[",[["^4@","^4A","~$val"]]]]],"^1:","Return true if start <= val, val < end and val is a fixed\n  precision integer."],"^=","~$cljs.spec.alpha/int-in-range?","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",20,"^1=",["^[",[["^4@","^4A","^75"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1449,"^1C",["^6",["^36","^1L"]],"^1H",1449,"^1E",3,"^1F",true,"^Z",["^[",["^10",["^[",[["^4@","^4A","^75"]]]]],"^1:","Return true if start <= val, val < end and val is a fixed\n  precision integer."],"~$dt",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",358,"^1@",8,"^1H",358,"^1I",10,"^1Z",true,"^Z",["^[",["^10",["^[",[["^1O","~$x","^1G"],["^1O","~$x","^1G","~$cpred?"]]]]],"^33",["^ ","^1A",false,"^34",4,"^1E",4,"^1=",["^[",[["^1O","~$x","^1G"],["^1O","~$x","^1G","^78"]]],"^Z",["^[",[["^1O","~$x","^1G"],["^1O","~$x","^1G","^78"]]],"^1?",["^[",[null,null]]]],"^1Z",true,"^=","~$cljs.spec.alpha/dt","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",10,"^33",["^ ","^1A",false,"^34",4,"^1E",4,"^1=",["^[",[["^1O","~$x","^1G"],["^1O","~$x","^1G","^78"]]],"^Z",["^[",[["^1O","~$x","^1G"],["^1O","~$x","^1G","^78"]]],"^1?",["^[",[null,null]]],"^1=",["^[",[["^1O","~$x","^1G"],["^1O","~$x","^1G","^78"]]],"^1>",null,"^34",4,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^2@",[["^ ","^34",3,"^1A",false,"^1U","^1L"],["^ ","^34",4,"^1A",false,"^1U",["^6",[null,"^1L","^2G"]]]],"^1B",358,"^1H",358,"^1E",4,"^1F",true,"^Z",["^[",[["^1O","~$x","^1G"],["^1O","~$x","^1G","^78"]]]],"~$t_cljs$spec$alpha28268",["^ ","^3:",6,"^Q",["^6",["^R","^S","^T","^U"]],"^=","^2I","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^3;",true,"^P",true,"^1@",6,"^1B",520,"^3<",false,"^1U","^3=","^W",["^6",["^S","^U"]]],"~$preturn",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1074,"^1@",8,"^1H",1074,"^1I",15,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$p"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/preturn","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",15,"^1=",["^[",[["~$p"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1074,"^1C",["^6",[null,"^1L","^2G","^31","^24"]],"^1H",1074,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["~$p"]]]]]],"~$->t_cljs$spec$alpha28592",["^ ","^N",null,"^O",["^ ","^P",true,"^Q",["^6",["^R","^S","^T","^U"]],"^W",["^6",["^S","^U"]],"^X","^Y","^Z",["^[",["^10",["^[",[["^1J","~$meta28593"]]]]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28592.","^1;",null],"^Q",["^6",["^R","^S","^T","^U"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha28592","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1=",["^[",[["^1J","^7>"]]],"^1>",null,"^1?",["^[",[null,null]],"^P",true,"^1@",5,"^1A",false,"^X","^Y","^1B",1391,"^1C","^2D","^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J","^7>"]]]]],"^W",["^6",["^S","^U"]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28592."],"~$re-conform",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1252,"^1@",8,"^1H",1252,"^1I",18,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$p",["~$x","~$&","~$xs","^58","~$data"]]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/re-conform","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",18,"^1=",["^[",[["~$p","~$p__28541"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1252,"^1C",["^6",[null,"^1L","^2G","^31","^24"]],"^1H",1252,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["~$p",["~$x","~$&","^7A","^58","^7B"]]]]]]],"~$spec?",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",74,"^1@",7,"^1H",74,"^1I",12,"^Z",["^[",["^10",["^[",[["~$x"]]]]],"^1:","returns x if x is a spec object, else logical false"],"^=","~$cljs.spec.alpha/spec?","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",12,"^1=",["^[",[["~$x"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",74,"^1C",["^6",[null,"^24"]],"^1H",74,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["~$x"]]]]],"^1:","returns x if x is a spec object, else logical false"],"~$registry",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",318,"^1@",7,"^1H",318,"^1I",15,"^Z",["^[",["^10",["^[",[[]]]]],"^1:","returns the registry map, prefer 'get-spec' to lookup a spec by name"],"^=","~$cljs.spec.alpha/registry","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",15,"^1=",["^[",[[]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",318,"^1C","^1L","^1H",318,"^1E",0,"^1F",true,"^Z",["^[",["^10",["^[",[[]]]]],"^1:","returns the registry map, prefer 'get-spec' to lookup a spec by name"],"~$rep+impl",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1010,"^1@",19,"^1H",1010,"^1I",27,"^1N",true,"^Z",["^[",["^10",["^[",[["^1G","~$p"]]]]],"^1:","Do not call this directly, use '+'"],"^=","~$cljs.spec.alpha/rep+impl","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",27,"^1=",["^[",[["^1G","~$p"]]],"^1>",null,"^1N",true,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1010,"^1C",["^6",["^1L","^20","^24"]],"^1H",1010,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^1G","~$p"]]]]],"^1:","Do not call this directly, use '+'"],"~$->t_cljs$spec$alpha28360",["^ ","^N",null,"^O",["^ ","^P",true,"^Q",["^6",["^R","^S","^T","^U"]],"^W",["^6",["^S","^U"]],"^X","^Y","^Z",["^[",["^10",["^[",[["^2V","^3G","^17","^18","^6@","~$meta28361"]]]]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28360.","^1;",null],"^Q",["^6",["^R","^S","^T","^U"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha28360","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1=",["^[",[["^2V","^3G","^17","^18","^6@","^7L"]]],"^1>",null,"^1?",["^[",[null,null]],"^P",true,"^1@",5,"^1A",false,"^X","^Y","^1B",780,"^1C","^2H","^1E",6,"^1F",true,"^Z",["^[",["^10",["^[",[["^2V","^3G","^17","^18","^6@","^7L"]]]]],"^W",["^6",["^S","^U"]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28360."],"~$deriv",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1123,"^1@",8,"^1H",1123,"^1I",13,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$p","~$x"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/deriv","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",13,"^1=",["^[",[["~$p","~$x"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1123,"^1C",["^6",[null,"^1L","^20","^24"]],"^1H",1123,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["~$p","~$x"]]]]]],"~$t_cljs$spec$alpha28360",["^ ","^3:",6,"^Q",["^6",["^R","^S","^T","^U"]],"^=","^2H","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^3;",true,"^P",true,"^1@",5,"^1B",780,"^3<",false,"^1U","^3=","^W",["^6",["^S","^U"]]],"~$deep-resolve",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",49,"^1@",8,"^1H",49,"^1I",20,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$reg","~$k"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/deep-resolve","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",20,"^1=",["^[",[["^7R","~$k"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",49,"^1H",49,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^7R","~$k"]]]]]],"~$t_cljs$spec$alpha28279",["^ ","^3:",9,"^Q",["^6",["^R","^S","^T","^U"]],"^=","^2M","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^3;",true,"^P",true,"^1@",6,"^1B",556,"^3<",false,"^1U","^3=","^W",["^6",["^S","^U"]]],"~$exercise",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1433,"^1@",7,"^1H",1433,"^1I",15,"^Z",["^[",["^10",["^[",[["^1J"],["^1J","~$n"],["^1J","~$n","^6L"]]]]],"^1:","generates a number (default 10) of values compatible with spec and maps conform over them,\n  returning a sequence of [val conformed-val] tuples. Optionally takes\n  a generator overrides map as per gen","^33",["^ ","^1A",false,"^34",3,"^1E",3,"^1=",["^[",[["^1J"],["^1J","~$n"],["^1J","~$n","^6L"]]],"^Z",["^[",[["^1J"],["^1J","~$n"],["^1J","~$n","^6L"]]],"^1?",["^[",[null,null,null]]]],"^=","~$cljs.spec.alpha/exercise","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",15,"^33",["^ ","^1A",false,"^34",3,"^1E",3,"^1=",["^[",[["^1J"],["^1J","~$n"],["^1J","~$n","^6L"]]],"^Z",["^[",[["^1J"],["^1J","~$n"],["^1J","~$n","^6L"]]],"^1?",["^[",[null,null,null]]],"^1=",["^[",[["^1J"],["^1J","~$n"],["^1J","~$n","^6L"]]],"^1>",null,"^34",3,"^1?",["^[",[null,null,null]],"^1@",1,"^1A",false,"^2@",[["^ ","^34",1,"^1A",false,"^1U","^1L"],["^ ","^34",2,"^1A",false,"^1U","^1L"],["^ ","^34",3,"^1A",false,"^1U","~$cljs.core/LazySeq"]],"^1B",1433,"^1H",1433,"^1E",3,"^1F",true,"^Z",["^[",[["^1J"],["^1J","~$n"],["^1J","~$n","^6L"]]],"^1:","generates a number (default 10) of values compatible with spec and maps conform over them,\n  returning a sequence of [val conformed-val] tuples. Optionally takes\n  a generator overrides map as per gen"],"~$explain-data",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",226,"^1@",7,"^1H",226,"^1I",19,"^Z",["^[",["^10",["^[",[["^1J","~$x"]]]]],"^1:","Given a spec and a value x which ought to conform, returns nil if x\n  conforms, else a map with at least the key ::problems whose value is\n  a collection of problem-maps, where problem-map has at least :path :pred and :val\n  keys describing the predicate and the value that failed at that\n  path."],"^=","~$cljs.spec.alpha/explain-data","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",19,"^1=",["^[",[["^1J","~$x"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",226,"^1C",["^6",["^20","^24"]],"^1H",226,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J","~$x"]]]]],"^1:","Given a spec and a value x which ought to conform, returns nil if x\n  conforms, else a map with at least the key ::problems whose value is\n  a collection of problem-maps, where problem-map has at least :path :pred and :val\n  keys describing the predicate and the value that failed at that\n  path."],"~$tuple-impl",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1I",29,"^33",["^ ","^1A",false,"^34",3,"^1E",3,"^1=",["^[",[["^2V","^3G"],["^2V","^3G","^17"]]],"^Z",["^[",[["^2V","^3G"],["^2V","^3G","^17"]]],"^1?",["^[",[null,null]]],"^1N",true,"^1@",19,"^1B",594,"^1H",594,"^Z",["^[",["^10",["^[",[["^2V","^3G"],["^2V","^3G","^17"]]]]],"^1:","Do not call this directly, use 'tuple'"],"^=","~$cljs.spec.alpha/tuple-impl","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",29,"^33",["^ ","^1A",false,"^34",3,"^1E",3,"^1=",["^[",[["^2V","^3G"],["^2V","^3G","^17"]]],"^Z",["^[",[["^2V","^3G"],["^2V","^3G","^17"]]],"^1?",["^[",[null,null]]],"^1=",["^[",[["^2V","^3G"],["^2V","^3G","^17"]]],"^1>",null,"^34",3,"^1N",true,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^2@",[["^ ","^34",2,"^1A",false,"^1U","^1L"],["^ ","^34",3,"^1A",false,"^1U","^2E"]],"^1B",594,"^1H",594,"^1E",3,"^1F",true,"^Z",["^[",[["^2V","^3G"],["^2V","^3G","^17"]]],"^1:","Do not call this directly, use 'tuple'"],"~$multi-spec-impl",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1I",34,"^33",["^ ","^1A",false,"^34",4,"^1E",4,"^1=",["^[",[["^1G","~$mmvar","~$retag"],["^1G","^81","^82","^17"]]],"^Z",["^[",[["^1G","^81","^82"],["^1G","^81","^82","^17"]]],"^1?",["^[",[null,null]]],"^1N",true,"^1@",19,"^1B",544,"^1H",544,"^Z",["^[",["^10",["^[",[["^1G","^81","^82"],["^1G","^81","^82","^17"]]]]],"^1:","Do not call this directly, use 'multi-spec'"],"^=","~$cljs.spec.alpha/multi-spec-impl","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",34,"^33",["^ ","^1A",false,"^34",4,"^1E",4,"^1=",["^[",[["^1G","^81","^82"],["^1G","^81","^82","^17"]]],"^Z",["^[",[["^1G","^81","^82"],["^1G","^81","^82","^17"]]],"^1?",["^[",[null,null]]],"^1=",["^[",[["^1G","^81","^82"],["^1G","^81","^82","^17"]]],"^1>",null,"^34",4,"^1N",true,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^2@",[["^ ","^34",3,"^1A",false,"^1U","^1L"],["^ ","^34",4,"^1A",false,"^1U","^2M"]],"^1B",544,"^1H",544,"^1E",4,"^1F",true,"^Z",["^[",[["^1G","^81","^82"],["^1G","^81","^82","^17"]]],"^1:","Do not call this directly, use 'multi-spec'"],"~$conform",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",168,"^1@",7,"^1H",168,"^1I",14,"^Z",["^[",["^10",["^[",[["^1J","~$x"]]]]],"^1:","Given a spec and a value, returns :cljs.spec.alpha/invalid if value does\n  not match spec, else the (possibly destructured) value."],"^=","~$cljs.spec.alpha/conform","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",14,"^1=",["^[",[["^1J","~$x"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",168,"^1C","^1L","^1H",168,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J","~$x"]]]]],"^1:","Given a spec and a value, returns :cljs.spec.alpha/invalid if value does\n  not match spec, else the (possibly destructured) value."],"~$t_cljs$spec$alpha28212",["^ ","^3:",19,"^Q",["^6",["^R","^S","^T","^U"]],"^=","^2R","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^3;",true,"^P",true,"^1@",5,"^1B",430,"^3<",false,"^1U","^3=","^W",["^6",["^S","^U"]]],"^6K",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",43,"^1@",4,"^1H",43,"^1I",8,"^4U","^R","^1:",null,"^Z",["^[",["^10",["^[",[["^1J","^6L","^26","^4Q"]]]]]],"^4U","^R","^=","~$cljs.spec.alpha/gen*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",8,"^1=",["^[",[["^1J","^6L","^26","^4Q"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",39,"^1C","^1L","^1H",43,"^1E",4,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J","^6L","^26","^4Q"]]]]],"^1:",null],"~$fspec-impl",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1339,"^1@",19,"^1H",1339,"^1I",29,"^1N",true,"^Z",["^[",["^10",["^[",[["^11","^12","^13","^14","^15","^16","^17"]]]]],"^1:","Do not call this directly, use 'fspec'"],"^=","~$cljs.spec.alpha/fspec-impl","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",29,"^1=",["^[",[["^11","^12","^13","^14","^15","^16","^17"]]],"^1>",null,"^1N",true,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1339,"^1C","^1D","^1H",1339,"^1E",7,"^1F",true,"^Z",["^[",["^10",["^[",[["^11","^12","^13","^14","^15","^16","^17"]]]]],"^1:","Do not call this directly, use 'fspec'"],"~$inck",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",355,"^1@",8,"^1H",355,"^1I",12,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$m","~$k"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/inck","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",12,"^1=",["^[",[["~$m","~$k"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",355,"^1C",["^6",["^2X","^1L"]],"^1H",355,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["~$m","~$k"]]]]]],"~$*coll-check-limit*",["^ ","^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",31,"^1@",16,"^1H",31,"^1I",34,"^1S",true],"^=","~$cljs.spec.alpha/*coll-check-limit*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",34,"^1@",1,"^1S",true,"^1B",31,"^1H",31,"^1U","^1V","^1:","The number of items validated in a collection spec'ed with 'every'"],"~$->t_cljs$spec$alpha28293",["^ ","^N",null,"^O",["^ ","^P",true,"^Q",["^6",["^R","^S","^T","^U"]],"^W",["^6",["^S","^U"]],"^X","^Y","^Z",["^[",["^10",["^[",[["^2V","^3G","^17","^18","~$cnt","~$meta28294"]]]]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28293.","^1;",null],"^Q",["^6",["^R","^S","^T","^U"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha28293","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1=",["^[",[["^2V","^3G","^17","^18","^8?","^8@"]]],"^1>",null,"^1?",["^[",[null,null]],"^P",true,"^1@",6,"^1A",false,"^X","^Y","^1B",600,"^1C","^2E","^1E",6,"^1F",true,"^Z",["^[",["^10",["^[",[["^2V","^3G","^17","^18","^8?","^8@"]]]]],"^W",["^6",["^S","^U"]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28293."],"~$get-spec",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",330,"^1@",7,"^1H",330,"^1I",15,"^Z",["^[",["^10",["^[",[["~$k"]]]]],"^1:","Returns spec registered for keyword/symbol/var k, or nil."],"^=","~$cljs.spec.alpha/get-spec","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",15,"^1=",["^[",[["~$k"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",330,"^1C",["^6",["^1L","^24"]],"^1H",330,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["~$k"]]]]],"^1:","Returns spec registered for keyword/symbol/var k, or nil."],"~$gensub",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",282,"^1@",8,"^1H",282,"^1I",14,"^1Z",true,"^Z",["^[",["^10",["^[",[["^1J","^6L","^26","^4Q","^1G"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/gensub","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",14,"^1=",["^[",[["^1J","^6L","^26","^4Q","^1G"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",282,"^1C","^1L","^1H",282,"^1E",5,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J","^6L","^26","^4Q","^1G"]]]]]],"~$the-spec",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",116,"^1@",8,"^1H",116,"^1I",16,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$spec-or-k"]]]]],"^1:","spec-or-k must be a spec, regex or kw/sym, else returns nil. Throws if unresolvable kw/sym"],"^1Z",true,"^=","~$cljs.spec.alpha/the-spec","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",16,"^1=",["^[",[["^8G"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",116,"^1C",["^6",["^1L","^24"]],"^1H",116,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["^8G"]]]]],"^1:","spec-or-k must be a spec, regex or kw/sym, else returns nil. Throws if unresolvable kw/sym"],"~$coll-prob",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",793,"^1@",8,"^1H",793,"^1I",17,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$x","^5N","~$kform","^5M","^5Q","^5R","^5C","^26","^27","^28"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/coll-prob","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",17,"^1=",["^[",[["~$x","^5N","^8J","^5M","^5Q","^5R","^5C","^26","^27","^28"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",793,"^1C",["^6",["^2;","^1L","^24"]],"^1H",793,"^1E",10,"^1F",true,"^Z",["^[",["^10",["^[",[["~$x","^5N","^8J","^5M","^5Q","^5R","^5C","^26","^27","^28"]]]]]],"~$every-impl",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1I",29,"^33",["^ ","^1A",false,"^34",4,"^1E",4,"^1=",["^[",[["^1G","^1O","^5S"],["^1G","^1O",["^ ","^5V","~:into","^5L","~:cljs.spec.alpha/describe","^4H",["^5T","~:cljs.spec.alpha/kind-form","^5Q","^5C","^5R","^5M","^5F","~:cljs.spec.alpha/kfn","~:cljs.spec.alpha/cpred","^5H","~:cljs.spec.alpha/conform-all"],"~:or",["^ ","^5F",20],"^58","^5S"],"^17"]]],"^Z",["^[",[["^1G","^1O","^5S"],["^1G","^1O",["^ ","^5V","^8M","^5L","^8N","^4H",["^5T","^8O","^5Q","^5C","^5R","^5M","^5F","^8P","^8Q","^5H","^8R"],"^8S",["^ ","^5F",20],"^58","^5S"],"^17"]]],"^1?",["^[",[null,null]]],"^1N",true,"^1@",19,"^1B",843,"^1H",843,"^Z",["^[",["^10",["^[",[["^1G","^1O","^5S"],["^1G","^1O",["^ ","^5V","^8M","^5L","^8N","^4H",["^5T","^8O","^5Q","^5C","^5R","^5M","^5F","^8P","^8Q","^5H","^8R"],"^8S",["^ ","^5F",20],"^58","^5S"],"^17"]]]]],"^1:","Do not call this directly, use 'every', 'every-kv', 'coll-of' or 'map-of'"],"^=","~$cljs.spec.alpha/every-impl","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",29,"^33",["^ ","^1A",false,"^34",4,"^1E",4,"^1=",["^[",[["^1G","^1O","^5S"],["^1G","^1O",["^ ","^5V","^8M","^5L","^8N","^4H",["^5T","^8O","^5Q","^5C","^5R","^5M","^5F","^8P","^8Q","^5H","^8R"],"^8S",["^ ","^5F",20],"^58","^5S"],"^17"]]],"^Z",["^[",[["^1G","^1O","^5S"],["^1G","^1O",["^ ","^5V","^8M","^5L","^8N","^4H",["^5T","^8O","^5Q","^5C","^5R","^5M","^5F","^8P","^8Q","^5H","^8R"],"^8S",["^ ","^5F",20],"^58","^5S"],"^17"]]],"^1?",["^[",[null,null]]],"^1=",["^[",[["^1G","^1O","^5S"],["^1G","^1O",["^ ","^5V","^8M","^5L","^8N","^4H",["^5T","^8O","^5Q","^5C","^5R","^5M","^5F","^8P","^8Q","^5H","^8R"],"^8S",["^ ","^5F",20],"^58","^5S"],"^17"]]],"^1>",null,"^34",4,"^1N",true,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^2@",[["^ ","^34",3,"^1A",false,"^1U","^1L"],["^ ","^34",4,"^1A",false,"^1U","^2Q"]],"^1B",843,"^1H",843,"^1E",4,"^1F",true,"^Z",["^[",[["^1G","^1O","^5S"],["^1G","^1O",["^ ","^5V","^8M","^5L","^8N","^4H",["^5T","^8O","^5Q","^5C","^5R","^5M","^5F","^8P","^8Q","^5H","^8R"],"^8S",["^ ","^5F",20],"^58","^5S"],"^17"]]],"^1:","Do not call this directly, use 'every', 'every-kv', 'coll-of' or 'map-of'"],"~$->t_cljs$spec$alpha28212",["^ ","^N",null,"^O",["^ ","^P",true,"^Q",["^6",["^R","^S","^T","^U"]],"^W",["^6",["^S","^U"]],"^X","^Y","^Z",["^[",["^10",["^[",[["~$keys->specnames","^57","^4Y","^4Z","^17","^50","^4[","^59","^51","^52","^5;","^53","~$map__28210","^4R","^54","^55","~$k->s","^56","~$meta28213"]]]]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28212.","^1;",null],"^Q",["^6",["^R","^S","^T","^U"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha28212","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1=",["^[",[["^8V","^57","^4Y","^4Z","^17","^50","^4[","^59","^51","^52","^5;","^53","^8W","^4R","^54","^55","^8X","^56","^8Y"]]],"^1>",null,"^1?",["^[",[null,null]],"^P",true,"^1@",5,"^1A",false,"^X","^Y","^1B",430,"^1C","^2R","^1E",19,"^1F",true,"^Z",["^[",["^10",["^[",[["^8V","^57","^4Y","^4Z","^17","^50","^4[","^59","^51","^52","^5;","^53","^8W","^4R","^54","^55","^8X","^56","^8Y"]]]]],"^W",["^6",["^S","^U"]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28212."],"~$accept-nil?",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1060,"^1@",8,"^1H",1060,"^1I",19,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$p"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/accept-nil?","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",19,"^1=",["^[",[["~$p"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1060,"^1C",["^6",["^36","^1L","^24"]],"^1H",1060,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["~$p"]]]]]],"~$maybe-spec",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",105,"^1@",8,"^1H",105,"^1I",18,"^1Z",true,"^Z",["^[",["^10",["^[",[["^8G"]]]]],"^1:","spec-or-k must be a spec, regex or resolvable kw/sym, else returns nil."],"^1Z",true,"^=","~$cljs.spec.alpha/maybe-spec","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",18,"^1=",["^[",[["^8G"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",105,"^1C",["^6",[null,"^2X","^1L","^2G","^2P","^60","^24"]],"^1H",105,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["^8G"]]]]],"^1:","spec-or-k must be a spec, regex or resolvable kw/sym, else returns nil."],"~$spec-impl",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1I",28,"^33",["^ ","^1A",false,"^34",5,"^1E",5,"^1=",["^[",[["^1G","^1O","^17","^78"],["^1G","^1O","^17","^78","~$unc"]]],"^Z",["^[",[["^1G","^1O","^17","^78"],["^1G","^1O","^17","^78","^94"]]],"^1?",["^[",[null,null]]],"^1N",true,"^1@",19,"^1B",511,"^1H",511,"^Z",["^[",["^10",["^[",[["^1G","^1O","^17","^78"],["^1G","^1O","^17","^78","^94"]]]]],"^1:","Do not call this directly, use 'spec'"],"^=","~$cljs.spec.alpha/spec-impl","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",28,"^33",["^ ","^1A",false,"^34",5,"^1E",5,"^1=",["^[",[["^1G","^1O","^17","^78"],["^1G","^1O","^17","^78","^94"]]],"^Z",["^[",[["^1G","^1O","^17","^78"],["^1G","^1O","^17","^78","^94"]]],"^1?",["^[",[null,null]]],"^1=",["^[",[["^1G","^1O","^17","^78"],["^1G","^1O","^17","^78","^94"]]],"^1>",null,"^34",5,"^1N",true,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^2@",[["^ ","^34",4,"^1A",false,"^1U","^1L"],["^ ","^34",5,"^1A",false,"^1U",["^6",[null,"^2X","^1L","^2I","^24"]]]],"^1B",511,"^1H",511,"^1E",5,"^1F",true,"^Z",["^[",[["^1G","^1O","^17","^78"],["^1G","^1O","^17","^78","^94"]]],"^1:","Do not call this directly, use 'spec'"],"~$invalid?",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",163,"^1@",7,"^1H",163,"^1I",15,"^Z",["^[",["^10",["^[",[["^2["]]]]],"^1:","tests the validity of a conform return value"],"^=","~$cljs.spec.alpha/invalid?","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",15,"^1=",["^[",[["^2["]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",163,"^1C","^36","^1H",163,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["^2["]]]]],"^1:","tests the validity of a conform return value"],"~$amp-impl",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1015,"^1@",19,"^1H",1015,"^1I",27,"^1N",true,"^Z",["^[",["^10",["^[",[["^3D","~$re-form","^3G","^56"]]]]],"^1:","Do not call this directly, use '&'"],"^=","~$cljs.spec.alpha/amp-impl","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",27,"^1=",["^[",[["^3D","^99","^3G","^56"]]],"^1>",null,"^1N",true,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1015,"^1C","^20","^1H",1015,"^1E",4,"^1F",true,"^Z",["^[",["^10",["^[",[["^3D","^99","^3G","^56"]]]]],"^1:","Do not call this directly, use '&'"],"~$pcat*",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",982,"^1@",8,"^1H",982,"^1I",13,"^1Z",true,"^Z",["^[",["^10",["^[",[[["~#cmap",[["^44","~$&","~$pr","^58","^2U"],"~:ps",["~$k1","~$&","~$kr","^58","^2T"],"~:ks",["~$f1","~$&","~$fr","^58","^2V"],"~:forms","^2[","~:ret","~$rep+","~:rep+"]]]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/pcat*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",13,"^1=",["^[",[["~$p__28438"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",982,"^1C",["^6",["^1L","^20","^24"]],"^1H",982,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[[["^9<",[["^44","~$&","^9=","^58","^2U"],"^9>",["^9?","~$&","^9@","^58","^2T"],"^9A",["^9B","~$&","^9C","^58","^2V"],"^9D","^2[","^9E","^9F","^9G"]]]]]]]],"~$alt*",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1029,"^1@",8,"^1H",1029,"^1I",12,"^1Z",true,"^Z",["^[",["^10",["^[",[["^2U","^2T","^2V"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/alt*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",12,"^1=",["^[",[["^2U","^2T","^2V"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1029,"^1C",["^6",["^1L","^20","^24"]],"^1H",1029,"^1E",3,"^1F",true,"^Z",["^[",["^10",["^[",[["^2U","^2T","^2V"]]]]]],"~$cat-impl",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",994,"^1@",19,"^1H",994,"^1I",27,"^1N",true,"^Z",["^[",["^10",["^[",[["^2T","^2U","^2V"]]]]],"^1:","Do not call this directly, use 'cat'"],"^=","~$cljs.spec.alpha/cat-impl","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",27,"^1=",["^[",[["^2T","^2U","^2V"]]],"^1>",null,"^1N",true,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",994,"^1C",["^6",["^1L","^20","^24"]],"^1H",994,"^1E",3,"^1F",true,"^Z",["^[",["^10",["^[",[["^2T","^2U","^2V"]]]]],"^1:","Do not call this directly, use 'cat'"],"~$macroexpand-check",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",337,"^1@",8,"^1H",337,"^1I",25,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$v","~$args"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/macroexpand-check","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",25,"^1=",["^[",[["~$v","^9O"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",337,"^1C","^24","^1H",337,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["~$v","^9O"]]]]]],"~$reg-resolve",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",55,"^1@",8,"^1H",55,"^1I",19,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$k"]]]]],"^1:","returns the spec/regex at end of alias chain starting with k, nil if not found, k if k not ident"],"^1Z",true,"^=","~$cljs.spec.alpha/reg-resolve","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",19,"^1=",["^[",[["~$k"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",55,"^1C",["^6",[null,"^1L","^24"]],"^1H",55,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["~$k"]]]]],"^1:","returns the spec/regex at end of alias chain starting with k, nil if not found, k if k not ident"],"~$explain-str",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",275,"^1@",7,"^1H",275,"^1I",18,"^Z",["^[",["^10",["^[",[["^1J","~$x"]]]]],"^1:","Given a spec and a value that fails to conform, returns an explanation as a string."],"^=","~$cljs.spec.alpha/explain-str","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",18,"^1=",["^[",[["^1J","~$x"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",275,"^1C","~$string","^1H",275,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J","~$x"]]]]],"^1:","Given a spec and a value that fails to conform, returns an explanation as a string."],"~$*compile-asserts*",["^ ","^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1474,"^1@",3,"^1H",1474,"^1I",20,"^1S",true,"^1:","If true, compiler will enable spec asserts, which are then\nsubject to runtime control via check-asserts? If false, compiler\nwill eliminate all spec assert overhead. See 'assert'.\nInitially set to the negation of the ':elide-asserts' compiler option.\nDefaults to true."],"^=","~$cljs.spec.alpha/*compile-asserts*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",20,"^1@",1,"^1S",true,"^1B",1467,"^1H",1474,"^1U","^36","^1:","If true, compiler will enable spec asserts, which are then\nsubject to runtime control via check-asserts? If false, compiler\nwill eliminate all spec assert overhead. See 'assert'.\nInitially set to the negation of the ':elide-asserts' compiler option.\nDefaults to true."],"~$with-gen",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",211,"^1@",7,"^1H",211,"^1I",15,"^Z",["^[",["^10",["^[",[["^1J","~$gen-fn"]]]]],"^1:","Takes a spec and a no-arg, generator-returning fn and returns a version of that spec that uses that generator"],"^=","~$cljs.spec.alpha/with-gen","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",15,"^1=",["^[",[["^1J","^9Y"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",211,"^1C",["^6",["^2X","^1L"]],"^1H",211,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J","^9Y"]]]]],"^1:","Takes a spec and a no-arg, generator-returning fn and returns a version of that spec that uses that generator"],"^6H",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",40,"^1@",4,"^1H",40,"^1I",12,"^4U","^R","^1:",null,"^Z",["^[",["^10",["^[",[["^1J","~$x"]]]]]],"^4U","^R","^=","~$cljs.spec.alpha/conform*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",12,"^1=",["^[",[["^1J","~$x"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",39,"^1C","^1L","^1H",40,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J","~$x"]]]]],"^1:",null],"~$t_cljs$spec$alpha28293",["^ ","^3:",6,"^Q",["^6",["^R","^S","^T","^U"]],"^=","^2E","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^3;",true,"^P",true,"^1@",6,"^1B",600,"^3<",false,"^1U","^3=","^W",["^6",["^S","^U"]]],"~$check-asserts?",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1482,"^1@",16,"^1H",1482,"^1I",30,"^1U","^36","^Z",["^[",["^10",["^[",[[]]]]],"^1:","Returns the value set by check-asserts."],"^=","~$cljs.spec.alpha/check-asserts?","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",30,"^1=",["^[",[[]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1482,"^1C","^36","^1H",1482,"^1E",0,"^1U","^36","^1F",true,"^Z",["^[",["^10",["^[",[[]]]]],"^1:","Returns the value set by check-asserts."],"~$noret?",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1052,"^1@",8,"^1H",1052,"^1I",14,"^1Z",true,"^Z",["^[",["^10",["^[",[["^44","~$pret"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/noret?","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",14,"^1=",["^[",[["^44","^:4"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1052,"^1C",["^6",["^36","^1L","^24"]],"^1H",1052,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^44","^:4"]]]]]],"~$rep-impl",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1006,"^1@",19,"^1H",1006,"^1I",27,"^1N",true,"^Z",["^[",["^10",["^[",[["^1G","~$p"]]]]],"^1:","Do not call this directly, use '*'"],"^=","~$cljs.spec.alpha/rep-impl","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",27,"^1=",["^[",[["^1G","~$p"]]],"^1>",null,"^1N",true,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1006,"^1C",["^6",["^2X","^1L","^24"]],"^1H",1006,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["^1G","~$p"]]]]],"^1:","Do not call this directly, use '*'"],"~$->t_cljs$spec$alpha28560",["^ ","^N",null,"^O",["^ ","^P",true,"^Q",["^6",["^R","^S","^T","^U"]],"^W",["^6",["^S","^U"]],"^X","^Y","^Z",["^[",["^10",["^[",[["^3D","^17","~$meta28561"]]]]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28560.","^1;",null],"^Q",["^6",["^R","^S","^T","^U"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha28560","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1=",["^[",[["^3D","^17","^:9"]]],"^1>",null,"^1?",["^[",[null,null]],"^P",true,"^1@",3,"^1A",false,"^X","^Y","^1B",1294,"^1C","^2O","^1E",3,"^1F",true,"^Z",["^[",["^10",["^[",[["^3D","^17","^:9"]]]]],"^W",["^6",["^S","^U"]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28560."],"~$op-describe",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1143,"^1@",8,"^1H",1143,"^1I",19,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$p"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/op-describe","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",19,"^1=",["^[",[["~$p"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1143,"^1C",["^6",[null,"^2X","^1L","^24"]],"^1H",1143,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["~$p"]]]]]],"~$describe",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",206,"^1@",7,"^1H",206,"^1I",15,"^Z",["^[",["^10",["^[",[["^1J"]]]]],"^1:","returns an abbreviated description of the spec as data"],"^=","~$cljs.spec.alpha/describe","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",15,"^1=",["^[",[["^1J"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",206,"^1C",["^6",[null,"^1L","^2P"]],"^1H",206,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J"]]]]],"^1:","returns an abbreviated description of the spec as data"],"~$explain-1",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",387,"^1@",8,"^1H",387,"^1I",17,"^1Z",true,"^Z",["^[",["^10",["^[",[["^1G","^1O","^26","^27","^28","~$v"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/explain-1","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",17,"^1=",["^[",[["^1G","^1O","^26","^27","^28","~$v"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",387,"^1C",["^6",["^2;","^1L"]],"^1H",387,"^1E",6,"^1F",true,"^Z",["^[",["^10",["^[",[["^1G","^1O","^26","^27","^28","~$v"]]]]]],"~$t_cljs$spec$alpha28567",["^ ","^3:",9,"^Q",["^6",["^R","^S","^T","^U","^V"]],"^=","^1D","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^3;",true,"^P",true,"^1@",5,"^1B",1343,"^3<",false,"^1U","^3=","^W",["^6",["^S","^U","^V"]]],"~$explain-out",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",264,"^1@",7,"^1H",264,"^1I",18,"^Z",["^[",["^10",["^[",[["^22"]]]]],"^1:","Prints explanation data (per 'explain-data') to *out* using the printer in *explain-out*,\n    by default explain-printer."],"^=","~$cljs.spec.alpha/explain-out","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",18,"^1=",["^[",[["^22"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",264,"^1C","^1L","^1H",264,"^1E",1,"^1F",true,"^Z",["^[",["^10",["^[",[["^22"]]]]],"^1:","Prints explanation data (per 'explain-data') to *out* using the printer in *explain-out*,\n    by default explain-printer."],"~$re-gen",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1214,"^1@",8,"^1H",1214,"^1I",14,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$p","^6L","^26","^4Q","~$f"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/re-gen","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",14,"^1=",["^[",[["~$p","^6L","^26","^4Q","~$f"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1214,"^1C",["^6",["^1L","^24"]],"^1H",1214,"^1E",5,"^1F",true,"^Z",["^[",["^10",["^[",[["~$p","^6L","^26","^4Q","~$f"]]]]]],"~$filter-alt",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1020,"^1@",8,"^1H",1020,"^1I",18,"^1Z",true,"^Z",["^[",["^10",["^[",[["^2U","^2T","^2V","~$f"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/filter-alt","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",18,"^1=",["^[",[["^2U","^2T","^2V","~$f"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1020,"^1C","^2;","^1H",1020,"^1E",4,"^1F",true,"^Z",["^[",["^10",["^[",[["^2U","^2T","^2V","~$f"]]]]]],"~$->t_cljs$spec$alpha28268",["^ ","^N",null,"^O",["^ ","^P",true,"^Q",["^6",["^R","^S","^T","^U"]],"^W",["^6",["^S","^U"]],"^X","^Y","^Z",["^[",["^10",["^[",[["^1G","^1O","^17","^78","^94","~$meta28269"]]]]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28268.","^1;",null],"^Q",["^6",["^R","^S","^T","^U"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha28268","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1=",["^[",[["^1G","^1O","^17","^78","^94","^:I"]]],"^1>",null,"^1?",["^[",[null,null]],"^P",true,"^1@",6,"^1A",false,"^X","^Y","^1B",520,"^1C","^2I","^1E",6,"^1F",true,"^Z",["^[",["^10",["^[",[["^1G","^1O","^17","^78","^94","^:I"]]]]],"^W",["^6",["^S","^U"]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28268."],"~$and-preds",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",726,"^1@",8,"^1H",726,"^1I",17,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$x","^3G","^2V"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/and-preds","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",17,"^1=",["^[",[["~$x","^3G","^2V"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",726,"^1C",["^6",[null,"^2G"]],"^1H",726,"^1E",3,"^1F",true,"^Z",["^[",["^10",["^[",[["~$x","^3G","^2V"]]]]]],"~$t_cljs$spec$alpha28595",["^ ","^3:",5,"^Q",["^6",["^R","^S","^T","^U"]],"^=","^1Q","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^3;",true,"^P",true,"^1@",5,"^1B",1411,"^3<",false,"^1U","^3=","^W",["^6",["^S","^U"]]],"~$call-valid?",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1318,"^1@",8,"^1H",1318,"^1I",19,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$f","^18","^9O"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/call-valid?","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",19,"^1=",["^[",[["~$f","^18","^9O"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1318,"^1C",["^6",["^36","^24"]],"^1H",1318,"^1E",3,"^1F",true,"^Z",["^[",["^10",["^[",[["~$f","^18","^9O"]]]]]],"~$->t_cljs$spec$alpha28279",["^ ","^N",null,"^O",["^ ","^P",true,"^Q",["^6",["^R","^S","^T","^U"]],"^W",["^6",["^S","^U"]],"^X","^Y","^Z",["^[",["^10",["^[",[["^1G","^81","^82","^17","^4R","~$predx","~$dval","^2Z","~$meta28280"]]]]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28279.","^1;",null],"^Q",["^6",["^R","^S","^T","^U"]],"^=","~$cljs.spec.alpha/->t_cljs$spec$alpha28279","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1=",["^[",[["^1G","^81","^82","^17","^4R","^:Q","^:R","^2Z","^:S"]]],"^1>",null,"^1?",["^[",[null,null]],"^P",true,"^1@",6,"^1A",false,"^X","^Y","^1B",556,"^1C","^2M","^1E",9,"^1F",true,"^Z",["^[",["^10",["^[",[["^1G","^81","^82","^17","^4R","^:Q","^:R","^2Z","^:S"]]]]],"^W",["^6",["^S","^U"]],"^1:","Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28279."],"~$op-unform",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1089,"^1@",8,"^1H",1089,"^1I",17,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$p","~$x"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/op-unform","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",17,"^1=",["^[",[["~$p","~$x"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1089,"^1C",["^6",["^2;","^1L"]],"^1H",1089,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["~$p","~$x"]]]]]],"~$rep*",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",999,"^1@",8,"^1H",999,"^1I",12,"^1Z",true,"^Z",["^[",["^10",["^[",[["^44","^45","^2[","~$splice","^1G"]]]]]],"^1Z",true,"^=","~$cljs.spec.alpha/rep*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",12,"^1=",["^[",[["^44","^45","^2[","^:X","^1G"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",999,"^1C",["^6",["^2X","^1L","^24"]],"^1H",999,"^1E",5,"^1F",true,"^Z",["^[",["^10",["^[",[["^44","^45","^2[","^:X","^1G"]]]]]],"^2A",["^ ","^N",null,"^O",["^ ","^4U","^T","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1I",12,"^33",["^ ","^1A",false,"^34",2,"^1E",2,"^1=",["^[",[["~$_"],["~$_","^1G"]]],"^Z",["^[",[["~$_"],["~$_","^1G"]]],"^1?",["^[",[null,null]]],"^1@",4,"^1B",132,"^1H",132,"^Z",["^[",["^10",["^[",[["~$_"],["~$_","^1G"]]]]],"^1:",null],"^4U","^T","^=","~$cljs.spec.alpha/specize*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",12,"^33",["^ ","^1A",false,"^34",2,"^1E",2,"^1=",["^[",[["~$_"],["~$_","^1G"]]],"^Z",["^[",[["~$_"],["~$_","^1G"]]],"^1?",["^[",[null,null]]],"^1=",["^[",[["~$_"],["~$_","^1G"]]],"^1>",null,"^34",2,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^2@",[["^ ","^34",1,"^1A",false,"^1U","^1L"],["^ ","^34",2,"^1A",false,"^1U","^1L"]],"^1B",131,"^1H",132,"^1E",2,"^1F",true,"^Z",["^[",[["~$_"],["~$_","^1G"]]],"^1:",null],"~$maybe-impl",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1048,"^1@",19,"^1H",1048,"^1I",29,"^1N",true,"^Z",["^[",["^10",["^[",[["~$p","^1G"]]]]],"^1:","Do not call this directly, use '?'"],"^=","~$cljs.spec.alpha/maybe-impl","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",29,"^1=",["^[",[["~$p","^1G"]]],"^1>",null,"^1N",true,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1048,"^1C",["^6",["^2X","^1L"]],"^1H",1048,"^1E",2,"^1F",true,"^Z",["^[",["^10",["^[",[["~$p","^1G"]]]]],"^1:","Do not call this directly, use '?'"],"~$pcat",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",992,"^1@",8,"^1H",992,"^1I",12,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$&","^2U"]]]]],"^33",["^ ","^1A",true,"^34",0,"^1E",0,"^1=",[["^[",["^2U"]]],"^Z",["^[",[["~$&","^2U"]]],"^1?",["^[",[null]]]],"^1Z",true,"^=","~$cljs.spec.alpha/pcat","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",12,"^33",["^ ","^1A",true,"^34",0,"^1E",0,"^1=",[["^[",["^2U"]]],"^Z",["^[",[["~$&","^2U"]]],"^1?",["^[",[null]]],"^1=",[["^[",["^2U"]]],"^1>",null,"^34",0,"^1?",["^[",[null]],"^1@",1,"^1A",true,"^2@",[["^ ","^34",0,"^1A",true,"^1U",["^6",["^1L","^20","^24"]]]],"^1B",992,"^1C","^1L","^1H",992,"^1E",0,"^1F",true,"^Z",["^[",[["~$&","^2U"]]]],"^6J",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",42,"^1@",4,"^1H",42,"^1I",12,"^4U","^R","^1:",null,"^Z",["^[",["^10",["^[",[["^1J","^26","^27","^28","~$x"]]]]]],"^4U","^R","^=","~$cljs.spec.alpha/explain*","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",12,"^1=",["^[",[["^1J","^26","^27","^28","~$x"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",39,"^1C","^1L","^1H",42,"^1E",5,"^1F",true,"^Z",["^[",["^10",["^[",[["^1J","^26","^27","^28","~$x"]]]]],"^1:",null],"~$validate-fn",["^ ","^N",null,"^O",["^ ","^1;","/home/tj/dev/git/tjsamples/clojure/quil/clock/resources/public/js/development/cljs/spec/alpha.cljs","^1B",1329,"^1@",8,"^1H",1329,"^1I",19,"^1Z",true,"^Z",["^[",["^10",["^[",[["~$f","^18","~$iters"]]]]],"^1:","returns f if valid, else smallest"],"^1Z",true,"^=","~$cljs.spec.alpha/validate-fn","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^1I",19,"^1=",["^[",[["~$f","^18","^;5"]]],"^1>",null,"^1?",["^[",[null,null]],"^1@",1,"^1A",false,"^1B",1329,"^1C",["^6",[null,"^1L","^24"]],"^1H",1329,"^1E",3,"^1F",true,"^Z",["^[",["^10",["^[",[["~$f","^18","^;5"]]]]],"^1:","returns f if valid, else smallest"],"~$t_cljs$spec$alpha28302",["^ ","^3:",9,"^Q",["^6",["^R","^S","^T","^U"]],"^=","^2F","^1;","resources/public/js/development/cljs/spec/alpha.cljs","^3;",true,"^P",true,"^1@",5,"^1B",697,"^3<",false,"^1U","^3=","^W",["^6",["^S","^U"]]]],"~:cljs.spec/registry-ref",[["~:cljs.spec.alpha/kvs->map",["^[",["~$cljs.spec.alpha/conformer",["^[",["~$fn*",["~$p1__28586#"],["^[",["~$cljs.core/zipmap",["^[",["~$cljs.core/map","~:cljs.spec.alpha/k","^;<"]],["^[",["^;>","~:cljs.spec.alpha/v","^;<"]]]]]],["^[",["^;;",["~$p1__28587#"],["^[",["^;>",["^[",["~$cljs.core/fn",[["~$k","~$v"]],["^ ","^;?","~$k","^;@","~$v"]]],"^;A"]]]]]]]],"~:require-macros",["^ ","~$c","^A","^A","^A","~$s","^>","^>","^>","^F","^G","^G","^G"],"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["^1G","^2Z","^5C","~:args","~:cljs.spec.alpha/failure","~$cljs.spec.alpha/*","~:max-tries","^6A","~:path","~:req-un","^;A","~:opt-un","^8@","^94","~$cljs.spec.alpha/+","~:p2","^5D","^9E","~:cljs.spec.alpha/unknown","~$cljs.core/sequential?","~:cljs.spec.alpha/value","~:gfn","~:cljs.spec.alpha/recursion-limit","~:cljs.spec.alpha/name","~:pred-exprs","^8M","~:keys-pred","~:gen-max","^7L","~:shrunk","^;<","~:fn","~$cljs.spec.alpha/alt","~$cljs.core/vector?","^:Q","^9G","~$cljs.core/=","^8Y","~:opt-keys","^12","^8V","~:cljs.spec.alpha/rep","~:pred","^:R","~:splice","^5E","^2V","^57","~:cljs.spec.alpha/accept","^11","~:else","^9A","~$cljs.core/count","~$cljs.spec.alpha/and","^4Y","^4Z","~$cljs.spec.alpha/cat","~:_","^8O","~:maybe","^3J","~:via","~$cljs.spec.alpha/every","~:req-specs","~$cljs.spec.alpha/or","^17","~:cljs.spec.alpha/gfn","^5F","^15","~$v","~:cljs.spec.alpha/spec","^50","~:conform-keys","^4[","^78","~$cljs.spec.alpha/fspec","^59","~$fn","~:amp","^3W","^16","^4I","~$cljs.spec.alpha/nilable","^51","^;@","~$cljs.spec.alpha/tuple","^1O","~$cljs.core/map?","^6Z","^8Q","~:p1","^;=","~:cljs.spec.alpha/problems","^5G","~$%","^;>","^;9","~$method","~:distinct","^52","^5;","^8","~$cljs.spec.alpha/keys","^3D","^5H","^6?","~:reason","~$cljs.spec.alpha/merge","~:cljs.spec.alpha/invalid","^3G","^5W","^5I","~:req","^5J","^5K","~$nil?","~:assertion-failed","^;;","~$cljs.core/<=","^6S","^19","~:cljs.spec.alpha/amp","~:id","^5L","~:min-count","^:I","~:kind","~:smallest","~$cljs.core/set?","~:count","^8?","~$cljs.core/nil?","^81","~:req-keys","^82","~$k","^;?","^;B","~$cljs.core/list?","^5M","^13","~:opt-specs","^:9","~:cljs.spec.alpha/args","^14","~$ifn?","~:pred-forms","^53","^1J","^:","~$distinct?","^8W","~:max-count","^5N","^8P","~:max-elements","^5O","~$cljs.spec.alpha/multi-spec","^5P","~$cljs.core/coll?","^4R","~:num-elements","^:S","^18","^5Q","^7>","^54","~$apply","^5R","^5S","^5T","^6@","~:min-elements","^55","^5U","^8R","~:cljs.spec.alpha/alt","~$cljs.core/or","^9D","~:cljs.spec.alpha/pred","^;","~:cljs.spec.alpha/nil","^9>","^8X","^;:","~:in","^8N","^5V","~:accept","~$cljs.spec.alpha/&","~:opt","~:cljs.spec.alpha/pcat","^56","~$cljs.spec.alpha/?"]],"~:order",["^4I","^;T","^;O","^<O","^<C","~~:_","^=G","^;Z","^=C","^;B","^=?","^<[","^;P","^3D","^:9","^;Y","^<X","^;X","^=<","^=4","^<B","^11","^12","^13","^14","^15","^16","^19","^;9","^;:","^;;","^;<","^;=","^;>","^;?","^;@","^;A","~$k","~$v","^6S","^7>","^=@","^<Q","^<E","^3J","^;G","^<R"]],"^1:",null]