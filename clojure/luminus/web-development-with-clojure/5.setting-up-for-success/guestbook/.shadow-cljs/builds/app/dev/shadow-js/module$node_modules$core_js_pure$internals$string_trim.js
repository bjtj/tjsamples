["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/core-js-pure/internals/string-trim.js"],"~:js","shadow$provide.module$node_modules$core_js_pure$internals$string_trim=function(global,require,module,exports){var requireObjectCoercible=require(\"module$node_modules$core_js_pure$internals$require_object_coercible\"),toString=require(\"module$node_modules$core_js_pure$internals$to_string\");global=\"[\"+require(\"module$node_modules$core_js_pure$internals$whitespaces\")+\"]\";var ltrim=RegExp(\"^\"+global+global+\"*\"),rtrim=RegExp(global+global+\"*$\");global=function(TYPE){return function($this){$this=toString(requireObjectCoercible($this));\nTYPE&1&&($this=$this.replace(ltrim,\"\"));TYPE&2&&($this=$this.replace(rtrim,\"\"));return $this}};module.exports={start:global(1),end:global(2),trim:global(3)}}","~:source","shadow$provide[\"module$node_modules$core_js_pure$internals$string_trim\"] = function(global,require,module,exports) {\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$core_js_pure$internals$whitespaces","~$module$node_modules$core_js_pure$internals$require_object_coercible","~$shadow.js","~$module$node_modules$core_js_pure$internals$to_string"]],"~:properties",["^5",["trim","start","end"]],"~:compiled-at",1633159627433,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$core_js_pure$internals$string_trim.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,sDAAf,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACnH,IAAIC,uBAAyBH,OAAA,CAAQ,qEAAR,CAA7B,CACII,SAAWJ,OAAA,CAAQ,sDAAR,CAGXK,OAAAA,CAAa,GAAbA,CAFcL,OAAAM,CAAQ,wDAARA,CAEdD,CAAiC,GACrC,KAAIE,MAAQC,MAAA,CAAO,GAAP,CAAaH,MAAb,CAA0BA,MAA1B,CAAuC,GAAvC,CAAZ,CACII,MAAQD,MAAA,CAAOH,MAAP,CAAoBA,MAApB,CAAiC,IAAjC,CAGRK,OAAAA,CAAeA,QAAS,CAACC,IAAD,CAAO,CACjC,MAAO,SAAS,CAACC,KAAD,CAAQ,CAClBC,KAAAA,CAAST,QAAA,CAASD,sBAAA,CAAuBS,KAAvB,CAAT,CACTD;IAAJ,CAAW,CAAX,GAAcE,KAAd,CAAuBA,KAAA,CAAOC,OAAP,CAAeP,KAAf,CAAsB,EAAtB,CAAvB,CACII,KAAJ,CAAW,CAAX,GAAcE,KAAd,CAAuBA,KAAA,CAAOC,OAAP,CAAeL,KAAf,CAAsB,EAAtB,CAAvB,CACA,OAAOI,MAJe,CADS,CASnCZ,OAAA,CAAOC,OAAP,CAAiB,CAGfa,MAAOL,MAAA,CAAa,CAAb,CAHQ,CAMfM,IAAKN,MAAA,CAAa,CAAb,CANU,CASfO,KAAMP,MAAA,CAAa,CAAb,CATS,CAnBkG;\",\n\"sources\":[\"node_modules/core-js-pure/internals/string-trim.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$core_js_pure$internals$string_trim\\\"] = function(global,require,module,exports) {\\nvar requireObjectCoercible = require('../internals/require-object-coercible');\\nvar toString = require('../internals/to-string');\\nvar whitespaces = require('../internals/whitespaces');\\n\\nvar whitespace = '[' + whitespaces + ']';\\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\\nvar rtrim = RegExp(whitespace + whitespace + '*$');\\n\\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\\nvar createMethod = function (TYPE) {\\n  return function ($this) {\\n    var string = toString(requireObjectCoercible($this));\\n    if (TYPE & 1) string = string.replace(ltrim, '');\\n    if (TYPE & 2) string = string.replace(rtrim, '');\\n    return string;\\n  };\\n};\\n\\nmodule.exports = {\\n  // `String.prototype.{ trimLeft, trimStart }` methods\\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\\n  start: createMethod(1),\\n  // `String.prototype.{ trimRight, trimEnd }` methods\\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\\n  end: createMethod(2),\\n  // `String.prototype.trim` method\\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\\n  trim: createMethod(3)\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"requireObjectCoercible\",\"toString\",\"whitespace\",\"whitespaces\",\"ltrim\",\"RegExp\",\"rtrim\",\"createMethod\",\"TYPE\",\"$this\",\"string\",\"replace\",\"start\",\"end\",\"trim\"]\n}\n"]